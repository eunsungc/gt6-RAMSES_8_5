.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Error 3"
.TH Error 3 "2015-08-11" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Globus::GRAM::Error \- GRAM Protocol Error Constants
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Globus::GRAM::Error module defines symbolic names for the
Error constants in the \s-1GRAM\s0 Protocol.
.PP
The Globus::GRAM::Error module methods return an object consisting
of an integer erorr code, and (optionally) a string explaining the
error.
.SS "Methods"
.IX Subsection "Methods"
.ie n .IP "$error = new Globus::GRAM::Error($number, $string);" 4
.el .IP "\f(CW$error\fR = new Globus::GRAM::Error($number, \f(CW$string\fR);" 4
.IX Item "$error = new Globus::GRAM::Error($number, $string);"
Create a new error object with the given error number and string
description. This is called by the error-specific factory methods described
below.
.ie n .IP "$error\->\fIstring()\fR" 4
.el .IP "\f(CW$error\fR\->\fIstring()\fR" 4
.IX Item "$error->string()"
Return the error string associated with a Globus::GRAM::Error object.
.ie n .IP "$error\->\fIvalue()\fR" 4
.el .IP "\f(CW$error\fR\->\fIvalue()\fR" 4
.IX Item "$error->value()"
Return the integer error code associated with a Globus::GRAM::Error object.
.ie n .IP "$error = \fIGlobus::GRAM::Error::PARAMETER_NOT_SUPPORTED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::PARAMETER_NOT_SUPPORTED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::PARAMETER_NOT_SUPPORTED()"
Create a new \s-1PARAMETER_NOT_SUPPORTED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_REQUEST()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_REQUEST()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_REQUEST()"
Create a new \s-1INVALID_REQUEST GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::NO_RESOURCES()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::NO_RESOURCES()\fR" 4
.IX Item "$error = Globus::GRAM::Error::NO_RESOURCES()"
Create a new \s-1NO_RESOURCES GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::BAD_DIRECTORY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::BAD_DIRECTORY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::BAD_DIRECTORY()"
Create a new \s-1BAD_DIRECTORY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::EXECUTABLE_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::EXECUTABLE_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::EXECUTABLE_NOT_FOUND()"
Create a new \s-1EXECUTABLE_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INSUFFICIENT_FUNDS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INSUFFICIENT_FUNDS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INSUFFICIENT_FUNDS()"
Create a new \s-1INSUFFICIENT_FUNDS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::AUTHORIZATION()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::AUTHORIZATION()\fR" 4
.IX Item "$error = Globus::GRAM::Error::AUTHORIZATION()"
Create a new \s-1AUTHORIZATION GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::USER_CANCELLED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::USER_CANCELLED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::USER_CANCELLED()"
Create a new \s-1USER_CANCELLED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::SYSTEM_CANCELLED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::SYSTEM_CANCELLED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::SYSTEM_CANCELLED()"
Create a new \s-1SYSTEM_CANCELLED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::PROTOCOL_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::PROTOCOL_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::PROTOCOL_FAILED()"
Create a new \s-1PROTOCOL_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STDIN_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STDIN_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STDIN_NOT_FOUND()"
Create a new \s-1STDIN_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CONNECTION_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CONNECTION_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CONNECTION_FAILED()"
Create a new \s-1CONNECTION_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_MAXTIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_MAXTIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_MAXTIME()"
Create a new \s-1INVALID_MAXTIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_COUNT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_COUNT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_COUNT()"
Create a new \s-1INVALID_COUNT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::NULL_SPECIFICATION_TREE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::NULL_SPECIFICATION_TREE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::NULL_SPECIFICATION_TREE()"
Create a new \s-1NULL_SPECIFICATION_TREE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JM_FAILED_ALLOW_ATTACH()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JM_FAILED_ALLOW_ATTACH()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JM_FAILED_ALLOW_ATTACH()"
Create a new \s-1JM_FAILED_ALLOW_ATTACH GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JOB_EXECUTION_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JOB_EXECUTION_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JOB_EXECUTION_FAILED()"
Create a new \s-1JOB_EXECUTION_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_PARADYN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_PARADYN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_PARADYN()"
Create a new \s-1INVALID_PARADYN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_JOBTYPE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_JOBTYPE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_JOBTYPE()"
Create a new \s-1INVALID_JOBTYPE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_GRAM_MYJOB()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_GRAM_MYJOB()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_GRAM_MYJOB()"
Create a new \s-1INVALID_GRAM_MYJOB GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::BAD_SCRIPT_ARG_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::BAD_SCRIPT_ARG_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::BAD_SCRIPT_ARG_FILE()"
Create a new \s-1BAD_SCRIPT_ARG_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::ARG_FILE_CREATION_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::ARG_FILE_CREATION_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::ARG_FILE_CREATION_FAILED()"
Create a new \s-1ARG_FILE_CREATION_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_JOBSTATE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_JOBSTATE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_JOBSTATE()"
Create a new \s-1INVALID_JOBSTATE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_SCRIPT_REPLY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_SCRIPT_REPLY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_SCRIPT_REPLY()"
Create a new \s-1INVALID_SCRIPT_REPLY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_SCRIPT_STATUS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_SCRIPT_STATUS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_SCRIPT_STATUS()"
Create a new \s-1INVALID_SCRIPT_STATUS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JOBTYPE_NOT_SUPPORTED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JOBTYPE_NOT_SUPPORTED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JOBTYPE_NOT_SUPPORTED()"
Create a new \s-1JOBTYPE_NOT_SUPPORTED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::UNIMPLEMENTED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::UNIMPLEMENTED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::UNIMPLEMENTED()"
Create a new \s-1UNIMPLEMENTED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::TEMP_SCRIPT_FILE_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::TEMP_SCRIPT_FILE_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::TEMP_SCRIPT_FILE_FAILED()"
Create a new \s-1TEMP_SCRIPT_FILE_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::USER_PROXY_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::USER_PROXY_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::USER_PROXY_NOT_FOUND()"
Create a new \s-1USER_PROXY_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_USER_PROXY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_USER_PROXY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_USER_PROXY()"
Create a new \s-1OPENING_USER_PROXY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JOB_CANCEL_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JOB_CANCEL_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JOB_CANCEL_FAILED()"
Create a new \s-1JOB_CANCEL_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::MALLOC_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::MALLOC_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::MALLOC_FAILED()"
Create a new \s-1MALLOC_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::DUCT_INIT_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::DUCT_INIT_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::DUCT_INIT_FAILED()"
Create a new \s-1DUCT_INIT_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::DUCT_LSP_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::DUCT_LSP_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::DUCT_LSP_FAILED()"
Create a new \s-1DUCT_LSP_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_HOST_COUNT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_HOST_COUNT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_HOST_COUNT()"
Create a new \s-1INVALID_HOST_COUNT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::UNSUPPORTED_PARAMETER()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::UNSUPPORTED_PARAMETER()\fR" 4
.IX Item "$error = Globus::GRAM::Error::UNSUPPORTED_PARAMETER()"
Create a new \s-1UNSUPPORTED_PARAMETER GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_QUEUE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_QUEUE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_QUEUE()"
Create a new \s-1INVALID_QUEUE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_PROJECT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_PROJECT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_PROJECT()"
Create a new \s-1INVALID_PROJECT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_EVALUATION_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_EVALUATION_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_EVALUATION_FAILED()"
Create a new \s-1RSL_EVALUATION_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::BAD_RSL_ENVIRONMENT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::BAD_RSL_ENVIRONMENT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::BAD_RSL_ENVIRONMENT()"
Create a new \s-1BAD_RSL_ENVIRONMENT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::DRYRUN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::DRYRUN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::DRYRUN()"
Create a new \s-1DRYRUN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::ZERO_LENGTH_RSL()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::ZERO_LENGTH_RSL()\fR" 4
.IX Item "$error = Globus::GRAM::Error::ZERO_LENGTH_RSL()"
Create a new \s-1ZERO_LENGTH_RSL GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STAGING_EXECUTABLE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STAGING_EXECUTABLE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STAGING_EXECUTABLE()"
Create a new \s-1STAGING_EXECUTABLE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STAGING_STDIN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STAGING_STDIN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STAGING_STDIN()"
Create a new \s-1STAGING_STDIN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_JOB_MANAGER_TYPE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_JOB_MANAGER_TYPE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_JOB_MANAGER_TYPE()"
Create a new \s-1INVALID_JOB_MANAGER_TYPE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::BAD_ARGUMENTS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::BAD_ARGUMENTS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::BAD_ARGUMENTS()"
Create a new \s-1BAD_ARGUMENTS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::GATEKEEPER_MISCONFIGURED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::GATEKEEPER_MISCONFIGURED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::GATEKEEPER_MISCONFIGURED()"
Create a new \s-1GATEKEEPER_MISCONFIGURED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::BAD_RSL()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::BAD_RSL()\fR" 4
.IX Item "$error = Globus::GRAM::Error::BAD_RSL()"
Create a new \s-1BAD_RSL GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::VERSION_MISMATCH()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::VERSION_MISMATCH()\fR" 4
.IX Item "$error = Globus::GRAM::Error::VERSION_MISMATCH()"
Create a new \s-1VERSION_MISMATCH GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_ARGUMENTS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_ARGUMENTS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_ARGUMENTS()"
Create a new \s-1RSL_ARGUMENTS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_COUNT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_COUNT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_COUNT()"
Create a new \s-1RSL_COUNT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_DIRECTORY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_DIRECTORY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_DIRECTORY()"
Create a new \s-1RSL_DIRECTORY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_DRYRUN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_DRYRUN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_DRYRUN()"
Create a new \s-1RSL_DRYRUN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_ENVIRONMENT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_ENVIRONMENT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_ENVIRONMENT()"
Create a new \s-1RSL_ENVIRONMENT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_EXECUTABLE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_EXECUTABLE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_EXECUTABLE()"
Create a new \s-1RSL_EXECUTABLE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_HOST_COUNT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_HOST_COUNT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_HOST_COUNT()"
Create a new \s-1RSL_HOST_COUNT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_JOBTYPE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_JOBTYPE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_JOBTYPE()"
Create a new \s-1RSL_JOBTYPE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_MAXTIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_MAXTIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_MAXTIME()"
Create a new \s-1RSL_MAXTIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_MYJOB()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_MYJOB()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_MYJOB()"
Create a new \s-1RSL_MYJOB GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_PARADYN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_PARADYN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_PARADYN()"
Create a new \s-1RSL_PARADYN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_PROJECT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_PROJECT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_PROJECT()"
Create a new \s-1RSL_PROJECT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_QUEUE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_QUEUE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_QUEUE()"
Create a new \s-1RSL_QUEUE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_STDERR()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_STDERR()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_STDERR()"
Create a new \s-1RSL_STDERR GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_STDIN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_STDIN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_STDIN()"
Create a new \s-1RSL_STDIN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_STDOUT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_STDOUT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_STDOUT()"
Create a new \s-1RSL_STDOUT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_JOBMANAGER_SCRIPT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_JOBMANAGER_SCRIPT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_JOBMANAGER_SCRIPT()"
Create a new \s-1OPENING_JOBMANAGER_SCRIPT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CREATING_PIPE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CREATING_PIPE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CREATING_PIPE()"
Create a new \s-1CREATING_PIPE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::FCNTL_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::FCNTL_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::FCNTL_FAILED()"
Create a new \s-1FCNTL_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STDOUT_FILENAME_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STDOUT_FILENAME_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STDOUT_FILENAME_FAILED()"
Create a new \s-1STDOUT_FILENAME_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STDERR_FILENAME_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STDERR_FILENAME_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STDERR_FILENAME_FAILED()"
Create a new \s-1STDERR_FILENAME_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::FORKING_EXECUTABLE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::FORKING_EXECUTABLE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::FORKING_EXECUTABLE()"
Create a new \s-1FORKING_EXECUTABLE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::EXECUTABLE_PERMISSIONS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::EXECUTABLE_PERMISSIONS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::EXECUTABLE_PERMISSIONS()"
Create a new \s-1EXECUTABLE_PERMISSIONS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_STDOUT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_STDOUT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_STDOUT()"
Create a new \s-1OPENING_STDOUT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_STDERR()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_STDERR()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_STDERR()"
Create a new \s-1OPENING_STDERR GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_CACHE_USER_PROXY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_CACHE_USER_PROXY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_CACHE_USER_PROXY()"
Create a new \s-1OPENING_CACHE_USER_PROXY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_CACHE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_CACHE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_CACHE()"
Create a new \s-1OPENING_CACHE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INSERTING_CLIENT_CONTACT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INSERTING_CLIENT_CONTACT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INSERTING_CLIENT_CONTACT()"
Create a new \s-1INSERTING_CLIENT_CONTACT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CLIENT_CONTACT_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CLIENT_CONTACT_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CLIENT_CONTACT_NOT_FOUND()"
Create a new \s-1CLIENT_CONTACT_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CONTACTING_JOB_MANAGER()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CONTACTING_JOB_MANAGER()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CONTACTING_JOB_MANAGER()"
Create a new \s-1CONTACTING_JOB_MANAGER GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_JOB_CONTACT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_JOB_CONTACT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_JOB_CONTACT()"
Create a new \s-1INVALID_JOB_CONTACT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::UNDEFINED_EXE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::UNDEFINED_EXE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::UNDEFINED_EXE()"
Create a new \s-1UNDEFINED_EXE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CONDOR_ARCH()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CONDOR_ARCH()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CONDOR_ARCH()"
Create a new \s-1CONDOR_ARCH GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CONDOR_OS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CONDOR_OS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CONDOR_OS()"
Create a new \s-1CONDOR_OS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_MIN_MEMORY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_MIN_MEMORY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_MIN_MEMORY()"
Create a new \s-1RSL_MIN_MEMORY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_MAX_MEMORY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_MAX_MEMORY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_MAX_MEMORY()"
Create a new \s-1RSL_MAX_MEMORY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_MIN_MEMORY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_MIN_MEMORY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_MIN_MEMORY()"
Create a new \s-1INVALID_MIN_MEMORY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_MAX_MEMORY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_MAX_MEMORY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_MAX_MEMORY()"
Create a new \s-1INVALID_MAX_MEMORY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::HTTP_FRAME_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::HTTP_FRAME_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::HTTP_FRAME_FAILED()"
Create a new \s-1HTTP_FRAME_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::HTTP_UNFRAME_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::HTTP_UNFRAME_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::HTTP_UNFRAME_FAILED()"
Create a new \s-1HTTP_UNFRAME_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::HTTP_PACK_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::HTTP_PACK_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::HTTP_PACK_FAILED()"
Create a new \s-1HTTP_PACK_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::HTTP_UNPACK_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::HTTP_UNPACK_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::HTTP_UNPACK_FAILED()"
Create a new \s-1HTTP_UNPACK_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_JOB_QUERY()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_JOB_QUERY()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_JOB_QUERY()"
Create a new \s-1INVALID_JOB_QUERY GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::SERVICE_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::SERVICE_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::SERVICE_NOT_FOUND()"
Create a new \s-1SERVICE_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JOB_QUERY_DENIAL()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JOB_QUERY_DENIAL()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JOB_QUERY_DENIAL()"
Create a new \s-1JOB_QUERY_DENIAL GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::CALLBACK_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::CALLBACK_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::CALLBACK_NOT_FOUND()"
Create a new \s-1CALLBACK_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::BAD_GATEKEEPER_CONTACT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::BAD_GATEKEEPER_CONTACT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::BAD_GATEKEEPER_CONTACT()"
Create a new \s-1BAD_GATEKEEPER_CONTACT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::POE_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::POE_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::POE_NOT_FOUND()"
Create a new \s-1POE_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::MPIRUN_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::MPIRUN_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::MPIRUN_NOT_FOUND()"
Create a new \s-1MPIRUN_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_START_TIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_START_TIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_START_TIME()"
Create a new \s-1RSL_START_TIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_RESERVATION_HANDLE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_RESERVATION_HANDLE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_RESERVATION_HANDLE()"
Create a new \s-1RSL_RESERVATION_HANDLE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_MAX_WALL_TIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_MAX_WALL_TIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_MAX_WALL_TIME()"
Create a new \s-1RSL_MAX_WALL_TIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_MAX_WALL_TIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_MAX_WALL_TIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_MAX_WALL_TIME()"
Create a new \s-1INVALID_MAX_WALL_TIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_MAX_CPU_TIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_MAX_CPU_TIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_MAX_CPU_TIME()"
Create a new \s-1RSL_MAX_CPU_TIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_MAX_CPU_TIME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_MAX_CPU_TIME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_MAX_CPU_TIME()"
Create a new \s-1INVALID_MAX_CPU_TIME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JM_SCRIPT_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JM_SCRIPT_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JM_SCRIPT_NOT_FOUND()"
Create a new \s-1JM_SCRIPT_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JM_SCRIPT_PERMISSIONS()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JM_SCRIPT_PERMISSIONS()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JM_SCRIPT_PERMISSIONS()"
Create a new \s-1JM_SCRIPT_PERMISSIONS GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::SIGNALING_JOB()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::SIGNALING_JOB()\fR" 4
.IX Item "$error = Globus::GRAM::Error::SIGNALING_JOB()"
Create a new \s-1SIGNALING_JOB GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::UNKNOWN_SIGNAL_TYPE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::UNKNOWN_SIGNAL_TYPE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::UNKNOWN_SIGNAL_TYPE()"
Create a new \s-1UNKNOWN_SIGNAL_TYPE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::GETTING_JOBID()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::GETTING_JOBID()\fR" 4
.IX Item "$error = Globus::GRAM::Error::GETTING_JOBID()"
Create a new \s-1GETTING_JOBID GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::WAITING_FOR_COMMIT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::WAITING_FOR_COMMIT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::WAITING_FOR_COMMIT()"
Create a new \s-1WAITING_FOR_COMMIT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::COMMIT_TIMED_OUT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::COMMIT_TIMED_OUT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::COMMIT_TIMED_OUT()"
Create a new \s-1COMMIT_TIMED_OUT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_SAVE_STATE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_SAVE_STATE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_SAVE_STATE()"
Create a new \s-1RSL_SAVE_STATE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_RESTART()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_RESTART()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_RESTART()"
Create a new \s-1RSL_RESTART GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_TWO_PHASE_COMMIT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_TWO_PHASE_COMMIT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_TWO_PHASE_COMMIT()"
Create a new \s-1RSL_TWO_PHASE_COMMIT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_TWO_PHASE_COMMIT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_TWO_PHASE_COMMIT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_TWO_PHASE_COMMIT()"
Create a new \s-1INVALID_TWO_PHASE_COMMIT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_STDOUT_POSITION()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_STDOUT_POSITION()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_STDOUT_POSITION()"
Create a new \s-1RSL_STDOUT_POSITION GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_STDOUT_POSITION()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_STDOUT_POSITION()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_STDOUT_POSITION()"
Create a new \s-1INVALID_STDOUT_POSITION GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_STDERR_POSITION()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_STDERR_POSITION()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_STDERR_POSITION()"
Create a new \s-1RSL_STDERR_POSITION GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_STDERR_POSITION()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_STDERR_POSITION()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_STDERR_POSITION()"
Create a new \s-1INVALID_STDERR_POSITION GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RESTART_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RESTART_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RESTART_FAILED()"
Create a new \s-1RESTART_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::NO_STATE_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::NO_STATE_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::NO_STATE_FILE()"
Create a new \s-1NO_STATE_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::READING_STATE_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::READING_STATE_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::READING_STATE_FILE()"
Create a new \s-1READING_STATE_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::WRITING_STATE_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::WRITING_STATE_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::WRITING_STATE_FILE()"
Create a new \s-1WRITING_STATE_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OLD_JM_ALIVE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OLD_JM_ALIVE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OLD_JM_ALIVE()"
Create a new \s-1OLD_JM_ALIVE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::TTL_EXPIRED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::TTL_EXPIRED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::TTL_EXPIRED()"
Create a new \s-1TTL_EXPIRED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::SUBMIT_UNKNOWN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::SUBMIT_UNKNOWN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::SUBMIT_UNKNOWN()"
Create a new \s-1SUBMIT_UNKNOWN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_REMOTE_IO_URL()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_REMOTE_IO_URL()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_REMOTE_IO_URL()"
Create a new \s-1RSL_REMOTE_IO_URL GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::WRITING_REMOTE_IO_URL()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::WRITING_REMOTE_IO_URL()\fR" 4
.IX Item "$error = Globus::GRAM::Error::WRITING_REMOTE_IO_URL()"
Create a new \s-1WRITING_REMOTE_IO_URL GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STDIO_SIZE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STDIO_SIZE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STDIO_SIZE()"
Create a new \s-1STDIO_SIZE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JM_STOPPED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JM_STOPPED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JM_STOPPED()"
Create a new \s-1JM_STOPPED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::USER_PROXY_EXPIRED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::USER_PROXY_EXPIRED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::USER_PROXY_EXPIRED()"
Create a new \s-1USER_PROXY_EXPIRED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JOB_UNSUBMITTED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JOB_UNSUBMITTED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JOB_UNSUBMITTED()"
Create a new \s-1JOB_UNSUBMITTED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_COMMIT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_COMMIT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_COMMIT()"
Create a new \s-1INVALID_COMMIT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_SCHEDULER_SPECIFIC()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_SCHEDULER_SPECIFIC()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_SCHEDULER_SPECIFIC()"
Create a new \s-1RSL_SCHEDULER_SPECIFIC GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STAGE_IN_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STAGE_IN_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STAGE_IN_FAILED()"
Create a new \s-1STAGE_IN_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_SCRATCH()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_SCRATCH()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_SCRATCH()"
Create a new \s-1INVALID_SCRATCH GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_CACHE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_CACHE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_CACHE()"
Create a new \s-1RSL_CACHE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_SUBMIT_ATTRIBUTE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_SUBMIT_ATTRIBUTE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_SUBMIT_ATTRIBUTE()"
Create a new \s-1INVALID_SUBMIT_ATTRIBUTE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_STDIO_UPDATE_ATTRIBUTE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_STDIO_UPDATE_ATTRIBUTE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_STDIO_UPDATE_ATTRIBUTE()"
Create a new \s-1INVALID_STDIO_UPDATE_ATTRIBUTE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_RESTART_ATTRIBUTE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_RESTART_ATTRIBUTE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_RESTART_ATTRIBUTE()"
Create a new \s-1INVALID_RESTART_ATTRIBUTE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_FILE_STAGE_IN()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_FILE_STAGE_IN()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_FILE_STAGE_IN()"
Create a new \s-1RSL_FILE_STAGE_IN GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_FILE_STAGE_IN_SHARED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_FILE_STAGE_IN_SHARED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_FILE_STAGE_IN_SHARED()"
Create a new \s-1RSL_FILE_STAGE_IN_SHARED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_FILE_STAGE_OUT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_FILE_STAGE_OUT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_FILE_STAGE_OUT()"
Create a new \s-1RSL_FILE_STAGE_OUT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_GASS_CACHE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_GASS_CACHE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_GASS_CACHE()"
Create a new \s-1RSL_GASS_CACHE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_FILE_CLEANUP()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_FILE_CLEANUP()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_FILE_CLEANUP()"
Create a new \s-1RSL_FILE_CLEANUP GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_SCRATCH()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_SCRATCH()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_SCRATCH()"
Create a new \s-1RSL_SCRATCH GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_SCHEDULER_SPECIFIC()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_SCHEDULER_SPECIFIC()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_SCHEDULER_SPECIFIC()"
Create a new \s-1INVALID_SCHEDULER_SPECIFIC GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::UNDEFINED_ATTRIBUTE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::UNDEFINED_ATTRIBUTE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::UNDEFINED_ATTRIBUTE()"
Create a new \s-1UNDEFINED_ATTRIBUTE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_CACHE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_CACHE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_CACHE()"
Create a new \s-1INVALID_CACHE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_SAVE_STATE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_SAVE_STATE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_SAVE_STATE()"
Create a new \s-1INVALID_SAVE_STATE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::OPENING_VALIDATION_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::OPENING_VALIDATION_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::OPENING_VALIDATION_FILE()"
Create a new \s-1OPENING_VALIDATION_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::READING_VALIDATION_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::READING_VALIDATION_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::READING_VALIDATION_FILE()"
Create a new \s-1READING_VALIDATION_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_PROXY_TIMEOUT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_PROXY_TIMEOUT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_PROXY_TIMEOUT()"
Create a new \s-1RSL_PROXY_TIMEOUT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_PROXY_TIMEOUT()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_PROXY_TIMEOUT()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_PROXY_TIMEOUT()"
Create a new \s-1INVALID_PROXY_TIMEOUT GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STAGE_OUT_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STAGE_OUT_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STAGE_OUT_FAILED()"
Create a new \s-1STAGE_OUT_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::JOB_CONTACT_NOT_FOUND()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::JOB_CONTACT_NOT_FOUND()\fR" 4
.IX Item "$error = Globus::GRAM::Error::JOB_CONTACT_NOT_FOUND()"
Create a new \s-1JOB_CONTACT_NOT_FOUND GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::DELEGATION_FAILED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::DELEGATION_FAILED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::DELEGATION_FAILED()"
Create a new \s-1DELEGATION_FAILED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::LOCKING_STATE_LOCK_FILE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::LOCKING_STATE_LOCK_FILE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::LOCKING_STATE_LOCK_FILE()"
Create a new \s-1LOCKING_STATE_LOCK_FILE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_ATTR()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_ATTR()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_ATTR()"
Create a new \s-1INVALID_ATTR GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::NULL_PARAMETER()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::NULL_PARAMETER()\fR" 4
.IX Item "$error = Globus::GRAM::Error::NULL_PARAMETER()"
Create a new \s-1NULL_PARAMETER GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::STILL_STREAMING()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::STILL_STREAMING()\fR" 4
.IX Item "$error = Globus::GRAM::Error::STILL_STREAMING()"
Create a new \s-1STILL_STREAMING GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::AUTHORIZATION_DENIED()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::AUTHORIZATION_DENIED()\fR" 4
.IX Item "$error = Globus::GRAM::Error::AUTHORIZATION_DENIED()"
Create a new \s-1AUTHORIZATION_DENIED GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::AUTHORIZATION_SYSTEM_FAILURE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::AUTHORIZATION_SYSTEM_FAILURE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::AUTHORIZATION_SYSTEM_FAILURE()"
Create a new \s-1AUTHORIZATION_SYSTEM_FAILURE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::AUTHORIZATION_DENIED_JOB_ID()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::AUTHORIZATION_DENIED_JOB_ID()\fR" 4
.IX Item "$error = Globus::GRAM::Error::AUTHORIZATION_DENIED_JOB_ID()"
Create a new \s-1AUTHORIZATION_DENIED_JOB_ID GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::AUTHORIZATION_DENIED_EXECUTABLE()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::AUTHORIZATION_DENIED_EXECUTABLE()\fR" 4
.IX Item "$error = Globus::GRAM::Error::AUTHORIZATION_DENIED_EXECUTABLE()"
Create a new \s-1AUTHORIZATION_DENIED_EXECUTABLE GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::RSL_USER_NAME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::RSL_USER_NAME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::RSL_USER_NAME()"
Create a new \s-1RSL_USER_NAME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::INVALID_USER_NAME()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::INVALID_USER_NAME()\fR" 4
.IX Item "$error = Globus::GRAM::Error::INVALID_USER_NAME()"
Create a new \s-1INVALID_USER_NAME GRAM\s0 error.
.ie n .IP "$error = \fIGlobus::GRAM::Error::LAST()\fR" 4
.el .IP "\f(CW$error\fR = \fIGlobus::GRAM::Error::LAST()\fR" 4
.IX Item "$error = Globus::GRAM::Error::LAST()"
Create a new \s-1LAST GRAM\s0 error.
