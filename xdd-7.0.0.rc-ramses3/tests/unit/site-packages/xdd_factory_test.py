#!/bin/env python

# Import modules
import unittest
from xdd.factory import EndpointFactory
from xdd.flow import Flow
from xdd.flowbuilder import FlowBuilder
from xdd.transfermanager import TransferManager

# "constants"
TEST_PORT = 40010

# Standard testing strategy: try to check each side of each branch statement
# for correctness

# Test constructor method of EndpointFactory
class EndpointFactoryTestCase(unittest.TestCase):
    """Test EndpointFactory constructor"""

    def test(self):
        """Test basic construction"""
        factory = EndpointFactory(1024, False, False, False, False, 'bin',
                                     [{'ip': 'localhost', 'hostname': 'localhost', 'threads':1,  'port':TEST_PORT, 'ifs':['localhost']}],
                                     False, False, False, False, 'bin',
                                     [{'ip': 'localhost', 'hostname': 'localhost', 'threads':1,  'port':TEST_PORT, 'ifs':['localhost']}])
        self.assertEqual(1, 1)

# Test createEndpoints method of EndpointFactory
class EndpointFactoryCreateEndpointsTestCase(unittest.TestCase):
    """Test EndpointFactory constructor"""

    def testSimpleLoopback(self):
        """Test a simple loopback"""
        factory = EndpointFactory(1024, False, False, False, False, 'bin',
                                     [{'ip': 'localhost', 'hostname': 'localhost', 'threads':1, 'port':TEST_PORT, 'ifs':['localhost']}],
                                     False, False, False, False, 'bin',
                                     [{'ip': 'localhost', 'hostname': 'localhost', 'threads':1, 'port':TEST_PORT, 'ifs':['localhost']}])
        factory.createEndpoints()
        self.assertEqual(1, len(factory.getSinkEndpoints()))
        self.assertEqual(1, len(factory.getSourceEndpoints()))
        self.assertEqual(2, len(factory.getEndpoints()))

    def testTwoSources(self):
        """Test a loopback with 2 sources and 1 sink"""
        factory = EndpointFactory(1024, False, False, False, False, 'bin',
                                     [{'ip': 'localhost', 'hostname': 'localhost', 'threads':1, 'port':TEST_PORT, 'ifs':['localhost']},
                                      {'ip': 'localhost', 'hostname': 'localhost', 'threads':1, 'port':TEST_PORT, 'ifs':['localhost']}],
                                     False, False, False, False, 'bin',
                                     [{'ip': 'localhost', 'hostname': 'localhost', 'threads':2, 'port':TEST_PORT, 'ifs':['localhost']}])
        factory.createEndpoints()
        self.assertEqual(1, len(factory.getSinkEndpoints()))
        self.assertEqual(2, len(factory.getSourceEndpoints()))
        self.assertEqual(3, len(factory.getEndpoints()))

    def testSameHost(self):
        """Test a source and sink on the same host"""
        # Get the hostname
        import platform
        host = platform.node()
        self.assertNotEqual(0, len(host))

        factory = EndpointFactory(1024, False, False, False, False, 'bin',
                                     [{'ip': host, 'hostname': host, 'threads':1, 'port':TEST_PORT, 'ifs':[host]}],
                                     False, False, False, False, 'bin',
                                     [{'ip': host, 'hostname': host, 'threads':1, 'port':TEST_PORT, 'ifs':[host]}])
        factory.createEndpoints()

        self.assertEqual(1, len(factory.getSinkEndpoints()))
        self.assertEqual(1, len(factory.getSourceEndpoints()))
        self.assertEqual(2, len(factory.getEndpoints()))

        source = factory.getSourceEndpoints()[0]
        sourceHost = source.hostname()
        self.assertEqual(host, sourceHost)

        sink = factory.getSinkEndpoints()[0]
        sinkHost = sink.hostname()
        self.assertEqual(host, sinkHost)

class EndpointFactoryCreateIfaceListTestCase(unittest.TestCase):
    """Test the createIfaceList method"""
    
    def testTransferManagerSink(self):
        """
        Test iface converter using a spec directly from the TransferManager
        """
        tm = TransferManager()
        tm.addSink(None, "localhost", "localhost", 1)
        
        factory = EndpointFactory(0,
                                  False,False,False,False, '', [],
                                  False,False,False,False, '', [])
        ifs = factory.createIfaceList(tm.sinks[0])
        self.assertEqual(1, len(ifs))
        self.assertEqual(('localhost', TEST_PORT, 1, ), ifs[0])
        
    def testTransferManagerSource(self):
        """
        Test iface converter using a spec directly from the TransferManager
        """
        tm = TransferManager()
        tm.addSource(None, "localhost", "localhost", 1)
        
        factory = EndpointFactory(0,
                                  False,False,False,False, '', [],
                                  False,False,False,False, '', [])
        ifs = factory.createIfaceList(tm.sources[0])
        self.assertEqual(1, len(ifs))
        self.assertEqual(('localhost', TEST_PORT, 1, ), ifs[0])
        

if __name__ == '__main__':
    unittest.main()
