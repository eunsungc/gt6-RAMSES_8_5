# Makefile.in generated by automake 1.13.4 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GLIB - Library of useful C routines



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/glib
pkgincludedir = $(includedir)/glib
pkglibdir = $(libdir)/glib
pkglibexecdir = $(libexecdir)/glib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/Makefile.decl $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(srcdir)/makefile.msc.in \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
noinst_PROGRAMS = $(am__EXEEXT_5) testgdate$(EXEEXT) \
	testgdateparser$(EXEEXT) unicode-normalize$(EXEEXT) \
	unicode-collate$(EXEEXT) $(am__EXEEXT_6) \
	assert-msg-test$(EXEEXT) datetime$(EXEEXT) \
	testgobject$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_3) $(am__EXEEXT_4)
TESTS = $(am__EXEEXT_3) $(test_scripts)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4macros/attributes.m4 \
	$(top_srcdir)/m4macros/gtk-doc.m4 \
	$(top_srcdir)/m4macros/libtool.m4 \
	$(top_srcdir)/m4macros/ltoptions.m4 \
	$(top_srcdir)/m4macros/ltsugar.m4 \
	$(top_srcdir)/m4macros/ltversion.m4 \
	$(top_srcdir)/m4macros/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/acglib.m4 \
	$(top_srcdir)/glib/libcharset/codeset.m4 \
	$(top_srcdir)/glib/libcharset/glibc21.m4 \
	$(top_srcdir)/m4macros/glib-gettext.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = makefile.msc
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libmoduletestplugin_a_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(libadd_libgmodule) $(libadd_libglib)
am_libmoduletestplugin_a_la_OBJECTS = libmoduletestplugin_a.lo
libmoduletestplugin_a_la_OBJECTS =  \
	$(am_libmoduletestplugin_a_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmoduletestplugin_a_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libmoduletestplugin_a_la_LDFLAGS) \
	$(LDFLAGS) -o $@
libmoduletestplugin_b_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(libadd_libgmodule) $(libadd_libglib)
am_libmoduletestplugin_b_la_OBJECTS = libmoduletestplugin_b.lo
libmoduletestplugin_b_la_OBJECTS =  \
	$(am_libmoduletestplugin_b_la_OBJECTS)
libmoduletestplugin_b_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libmoduletestplugin_b_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am__EXEEXT_1 = cxx-test$(EXEEXT)
#am__EXEEXT_2 = spawn-test-win32-gui$(EXEEXT)
am__EXEEXT_3 = atomic-test$(EXEEXT) bit-test$(EXEEXT) $(am__EXEEXT_1) \
	child-test$(EXEEXT) completion-test$(EXEEXT) \
	dirname-test$(EXEEXT) file-test$(EXEEXT) env-test$(EXEEXT) \
	gio-test$(EXEEXT) iochannel-test$(EXEEXT) \
	mainloop-test$(EXEEXT) mapping-test$(EXEEXT) \
	module-test$(EXEEXT) onceinit$(EXEEXT) \
	asyncqueue-test$(EXEEXT) qsort-test$(EXEEXT) \
	relation-test$(EXEEXT) slice-test$(EXEEXT) \
	slice-color$(EXEEXT) slice-concurrent$(EXEEXT) \
	slice-threadinit$(EXEEXT) sources$(EXEEXT) spawn-test$(EXEEXT) \
	$(am__EXEEXT_2) thread-test$(EXEEXT) threadpool-test$(EXEEXT) \
	type-test$(EXEEXT) unicode-caseconv$(EXEEXT) \
	unicode-encoding$(EXEEXT)
am__EXEEXT_4 = unicode-collate$(EXEEXT)
am__EXEEXT_5 = testglib$(EXEEXT)
am__EXEEXT_6 = timeloop$(EXEEXT) \
	timeloop-closure$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
assert_msg_test_SOURCES = assert-msg-test.c
assert_msg_test_OBJECTS = assert-msg-test.$(OBJEXT)
assert_msg_test_DEPENDENCIES = $(libglib)
asyncqueue_test_SOURCES = asyncqueue-test.c
asyncqueue_test_OBJECTS = asyncqueue-test.$(OBJEXT)
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(libglib) \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(libgthread) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
asyncqueue_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
atomic_test_SOURCES = atomic-test.c
atomic_test_OBJECTS = atomic-test.$(OBJEXT)
atomic_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
bit_test_SOURCES = bit-test.c
bit_test_OBJECTS = bit-test.$(OBJEXT)
bit_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
child_test_SOURCES = child-test.c
child_test_OBJECTS = child-test.$(OBJEXT)
child_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
completion_test_SOURCES = completion-test.c
completion_test_OBJECTS = completion-test.$(OBJEXT)
completion_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__cxx_test_SOURCES_DIST = cxx-test.C
am_cxx_test_OBJECTS = cxx-test.$(OBJEXT)
cxx_test_OBJECTS = $(am_cxx_test_OBJECTS)
cxx_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
datetime_SOURCES = datetime.c
datetime_OBJECTS = datetime.$(OBJEXT)
datetime_DEPENDENCIES = $(libglib)
dirname_test_SOURCES = dirname-test.c
dirname_test_OBJECTS = dirname-test.$(OBJEXT)
dirname_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
env_test_SOURCES = env-test.c
env_test_OBJECTS = env-test.$(OBJEXT)
env_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
file_test_SOURCES = file-test.c
file_test_OBJECTS = file-test.$(OBJEXT)
file_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
gio_test_SOURCES = gio-test.c
gio_test_OBJECTS = gio-test.$(OBJEXT)
gio_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
iochannel_test_SOURCES = iochannel-test.c
iochannel_test_OBJECTS = iochannel-test.$(OBJEXT)
iochannel_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
mainloop_test_SOURCES = mainloop-test.c
mainloop_test_OBJECTS = mainloop-test.$(OBJEXT)
mainloop_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
mapping_test_SOURCES = mapping-test.c
mapping_test_OBJECTS = mapping-test.$(OBJEXT)
mapping_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
module_test_SOURCES = module-test.c
module_test_OBJECTS = module-test.$(OBJEXT)
am__DEPENDENCIES_4 = $(libgmodule) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
module_test_DEPENDENCIES = $(am__DEPENDENCIES_4) $(module_test_exp)
module_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(module_test_LDFLAGS) $(LDFLAGS) -o $@
onceinit_SOURCES = onceinit.c
onceinit_OBJECTS = onceinit.$(OBJEXT)
onceinit_DEPENDENCIES = $(am__DEPENDENCIES_3)
qsort_test_SOURCES = qsort-test.c
qsort_test_OBJECTS = qsort-test.$(OBJEXT)
qsort_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
relation_test_SOURCES = relation-test.c
relation_test_OBJECTS = relation-test.$(OBJEXT)
relation_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_slice_color_OBJECTS = slice-color.$(OBJEXT) memchunks.$(OBJEXT)
slice_color_OBJECTS = $(am_slice_color_OBJECTS)
slice_color_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_slice_concurrent_OBJECTS = slice-concurrent.$(OBJEXT)
slice_concurrent_OBJECTS = $(am_slice_concurrent_OBJECTS)
slice_concurrent_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_slice_test_OBJECTS = slice-test.$(OBJEXT) memchunks.$(OBJEXT)
slice_test_OBJECTS = $(am_slice_test_OBJECTS)
slice_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_slice_threadinit_OBJECTS = slice-threadinit.$(OBJEXT)
slice_threadinit_OBJECTS = $(am_slice_threadinit_OBJECTS)
slice_threadinit_DEPENDENCIES = $(am__DEPENDENCIES_3)
sources_SOURCES = sources.c
sources_OBJECTS = sources.$(OBJEXT)
sources_DEPENDENCIES = $(am__DEPENDENCIES_2)
spawn_test_SOURCES = spawn-test.c
spawn_test_OBJECTS = spawn-test.$(OBJEXT)
spawn_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
spawn_test_win32_gui_SOURCES = spawn-test-win32-gui.c
spawn_test_win32_gui_OBJECTS = spawn-test-win32-gui.$(OBJEXT)
spawn_test_win32_gui_LDADD = $(LDADD)
spawn_test_win32_gui_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(spawn_test_win32_gui_LDFLAGS) \
	$(LDFLAGS) -o $@
testgdate_SOURCES = testgdate.c
testgdate_OBJECTS = testgdate.$(OBJEXT)
testgdate_DEPENDENCIES = $(libglib)
testgdateparser_SOURCES = testgdateparser.c
testgdateparser_OBJECTS = testgdateparser.$(OBJEXT)
testgdateparser_DEPENDENCIES = $(libglib)
am_testglib_OBJECTS = testglib.$(OBJEXT)
testglib_OBJECTS = $(am_testglib_OBJECTS)
testglib_DEPENDENCIES = $(libglib)
testgobject_SOURCES = testgobject.c
testgobject_OBJECTS = testgobject.$(OBJEXT)
testgobject_DEPENDENCIES = $(libglib) $(libgobject)
thread_test_SOURCES = thread-test.c
thread_test_OBJECTS = thread-test.$(OBJEXT)
thread_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
threadpool_test_SOURCES = threadpool-test.c
threadpool_test_OBJECTS = threadpool-test.$(OBJEXT)
threadpool_test_DEPENDENCIES = $(am__DEPENDENCIES_3)
timeloop_SOURCES = timeloop.c
timeloop_OBJECTS = timeloop.$(OBJEXT)
timeloop_DEPENDENCIES = $(libglib)
timeloop_closure_SOURCES = timeloop-closure.c
timeloop_closure_OBJECTS = timeloop-closure.$(OBJEXT)
timeloop_closure_DEPENDENCIES = $(libglib) \
	$(libgobject)
type_test_SOURCES = type-test.c
type_test_OBJECTS = type-test.$(OBJEXT)
type_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
unicode_caseconv_SOURCES = unicode-caseconv.c
unicode_caseconv_OBJECTS = unicode-caseconv.$(OBJEXT)
unicode_caseconv_DEPENDENCIES = $(am__DEPENDENCIES_2)
unicode_collate_SOURCES = unicode-collate.c
unicode_collate_OBJECTS = unicode-collate.$(OBJEXT)
unicode_collate_DEPENDENCIES = $(libglib)
unicode_encoding_SOURCES = unicode-encoding.c
unicode_encoding_OBJECTS = unicode-encoding.$(OBJEXT)
unicode_encoding_DEPENDENCIES = $(am__DEPENDENCIES_2)
unicode_normalize_SOURCES = unicode-normalize.c
unicode_normalize_OBJECTS = unicode-normalize.$(OBJEXT)
unicode_normalize_DEPENDENCIES = $(libglib)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmoduletestplugin_a_la_SOURCES) \
	$(libmoduletestplugin_b_la_SOURCES) assert-msg-test.c \
	asyncqueue-test.c atomic-test.c bit-test.c child-test.c \
	completion-test.c $(cxx_test_SOURCES) datetime.c \
	dirname-test.c env-test.c file-test.c gio-test.c \
	iochannel-test.c mainloop-test.c mapping-test.c module-test.c \
	onceinit.c qsort-test.c relation-test.c $(slice_color_SOURCES) \
	$(slice_concurrent_SOURCES) $(slice_test_SOURCES) \
	$(slice_threadinit_SOURCES) sources.c spawn-test.c \
	spawn-test-win32-gui.c testgdate.c testgdateparser.c \
	$(testglib_SOURCES) testgobject.c thread-test.c \
	threadpool-test.c timeloop.c timeloop-closure.c type-test.c \
	unicode-caseconv.c unicode-collate.c unicode-encoding.c \
	unicode-normalize.c
DIST_SOURCES = $(libmoduletestplugin_a_la_SOURCES) \
	$(libmoduletestplugin_b_la_SOURCES) assert-msg-test.c \
	asyncqueue-test.c atomic-test.c bit-test.c child-test.c \
	completion-test.c $(am__cxx_test_SOURCES_DIST) datetime.c \
	dirname-test.c env-test.c file-test.c gio-test.c \
	iochannel-test.c mainloop-test.c mapping-test.c module-test.c \
	onceinit.c qsort-test.c relation-test.c $(slice_color_SOURCES) \
	$(slice_concurrent_SOURCES) $(slice_test_SOURCES) \
	$(slice_threadinit_SOURCES) sources.c spawn-test.c \
	spawn-test-win32-gui.c testgdate.c testgdateparser.c \
	$(testglib_SOURCES) testgobject.c thread-test.c \
	threadpool-test.c timeloop.c timeloop-closure.c type-test.c \
	unicode-caseconv.c unicode-collate.c unicode-encoding.c \
	unicode-normalize.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ABS_GLIB_RUNTIME_LIBDIR = 
ABS_TAPSET_DIR = $(datadir)/systemtap/tapset
ACLOCAL = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing aclocal-1.13
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing autoconf
AUTOHEADER = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing autoheader
AUTOMAKE = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing automake-1.13
AWK = gawk
CATALOGS =  af.gmo am.gmo ar.gmo as.gmo ast.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mai.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo tg.gmo th.gmo tl.gmo tr.gmo ug.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2 -fPIC -DPIC
CONFIG_STATUS_DEPENDENCIES = $(top_srcdir)/po/LINGUAS
CPP = gcc -E
CPPFLAGS =   -pthread
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS1_CFLAGS = 
DBUS1_LIBS = 
DBUS_DAEMON = dbus-daemon
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DTRACE = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FAM_LIBS = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = glib20
GIO = giounix.lo
GIO_MODULE_DIR = ${libdir}/gio/modules
GLIBC21 = yes
GLIB_BINARY_AGE = 3604
GLIB_COMPILE_RESOURCES = 
GLIB_COMPILE_SCHEMAS = 
GLIB_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
GLIB_EXTRA_CFLAGS = 
GLIB_GENMARSHAL = 
GLIB_HIDDEN_VISIBILITY_CFLAGS = -fvisibility=hidden
GLIB_INTERFACE_AGE = 4
GLIB_LINK_FLAGS = -Wl,-Bsymbolic-functions
GLIB_MAJOR_VERSION = 2
GLIB_MICRO_VERSION = 4
GLIB_MINOR_VERSION = 36
GLIB_RUNTIME_LIBDIR = 
GLIB_VERSION = 2.36.4
GLIB_WARN_CFLAGS = 
GLIB_WIN32_STATIC_COMPILATION_DEFINE = 
GMOFILES =  af.gmo am.gmo ar.gmo as.gmo ast.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mai.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo tg.gmo th.gmo tl.gmo tr.gmo ug.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GSPAWN = gspawn.lo
GTHREAD_COMPILE_IMPL_DEFINES = -D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE -U_OSF_SOURCE
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
G_LIBS_EXTRA = 
G_MODULE_BROKEN_RTLD_GLOBAL = 0
G_MODULE_HAVE_DLERROR = 1
G_MODULE_IMPL = G_MODULE_IMPL_DL
G_MODULE_LDFLAGS = -Wl,--export-dynamic
G_MODULE_LIBS = -ldl
G_MODULE_LIBS_EXTRA = 
G_MODULE_NEED_USCORE = 0
G_MODULE_PLUGIN_LIBS = 
G_MODULE_SUPPORTED = true
G_THREAD_CFLAGS = -pthread
G_THREAD_LIBS = -pthread -lrt
G_THREAD_LIBS_EXTRA = 
G_THREAD_LIBS_FOR_GTHREAD = -lpthread -lrt
HTML_DIR = ${datadir}/gtk-doc/html
ICONV_LIBS = 
INDENT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LD = /usr/bin/ld -m elf_x86_64 -m elf_x86_64
LDFLAGS =  
LIBELF_CFLAGS = 
LIBELF_LIBS = 
LIBFFI_CFLAGS = -I/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/libffi/lib/libffi-3.0.13/include  
LIBFFI_LIBS = -L/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/libffi/lib -lffi  
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_EXE_MACHINE_FLAG = X86
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
LT_AGE = 3600
LT_CURRENT = 3600
LT_CURRENT_MINUS_AGE = 0
LT_RELEASE = 2.36
LT_REVISION = 4
MAINT = 
MAKEINFO = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NAMESER_COMPAT_INCLUDE = 
NETWORK_LIBS = -lresolv 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glib
PACKAGE_NAME = glib
PACKAGE_STRING = glib 2.36.4
PACKAGE_TARNAME = glib
PACKAGE_URL = 
PACKAGE_VERSION = 2.36.4
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PCRE_REQUIRES = 
PCRE_WARN_CFLAGS =  -Wno-pointer-sign
PERL = perl
PERL_PATH = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/common/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/src:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/gfork/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/openssl_error/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/proxy/proxy_ssl/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/openssl_module/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/cert_utils/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/sysconfig/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/callout/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/callback/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/credential/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/proxy/proxy_core/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gssapi/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gss_assist/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gssapi_error/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/gsi:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/io/compat:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/control/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/usage/c/sender/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/pipe/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/server-lib/src:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/authz/error:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/authz/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/rate/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/popen/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/net_manager:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/server/src:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/protocol/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/scheduler_event_generator/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/lsf/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/transfer/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/client/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/copy/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/cache/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/rsl/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/callout_error:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/server/multi/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/simple_ca/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/sge/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/scripts:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/slurm/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_callout/error:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_callout/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/server_ez/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/gridftp_driver/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/fork/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_verify_myproxy_callout:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_eppn_callout:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/condor/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/proxy/proxy_utils/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/client/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/xioperf/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/gatekeeper/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/cache_program/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/pbs/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/auditing/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/myproxy/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi_openssh/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/client_tools/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/hdfs:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/libffi/lib/pkgconfig
PLATFORMDEP = 
POFILES =  af.po am.po ar.po as.po ast.po az.po be.po be@latin.po bg.po bn.po bn_IN.po bs.po ca.po ca@valencia.po cs.po cy.po da.po de.po dz.po el.po en_CA.po en_GB.po en@shaw.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po id.po is.po it.po ja.po ka.po kk.po kn.po ko.po ku.po lt.po lv.po mai.po mg.po mk.po ml.po mn.po mr.po ms.po nb.po nds.po ne.po nl.po nn.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@latin.po sr@ije.po sv.po ta.po te.po tg.po th.po tl.po tr.po ug.po tt.po uk.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
RANLIB = ranlib
REBUILD = 
SED = /bin/sed
SELINUX_LIBS = -lselinux
SET_MAKE = 
SHELL = /bin/sh
SHTOOL = 
STRIP = strip
USE_NLS = yes
VERSION = 2.36.4
WINDRES = 
WSPIAPI_INCLUDE = 
XATTR_LIBS = 
XGETTEXT = /usr/bin/xgettext
XMLCATALOG = /usr/bin/xmlcatalog
XML_CATALOG_FILE = /etc/xml/catalog
XSLTPROC = /usr/bin/xsltproc
ZLIB_CFLAGS =  
ZLIB_LIBS = -lz  
abs_builddir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/tests
abs_srcdir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/tests
abs_top_builddir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source
abs_top_srcdir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
config_h_INCLUDES = -I$(top_builddir)
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gio_INCLUDES = $(gmodule_INCLUDES)
glib_INCLUDES = $(config_h_INCLUDES) -I$(top_builddir)/glib -I$(top_srcdir)/glib -I$(top_srcdir)
gmodule_INCLUDES = $(glib_INCLUDES) -I$(top_srcdir)/gmodule
gobject_INCLUDES = $(glib_INCLUDES)
host = x86_64-unknown-linux-gnu
host_alias = x86_64-unknown-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/glib
pkgpythondir = ${pythondir}/glib
prefix = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib64/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#GTESTER = gtester 			# for non-GLIB packages
GTESTER = $(top_builddir)/glib/gtester			# for the GLIB package
GTESTER_REPORT = $(top_builddir)/glib/gtester-report	# for the GLIB package

# initialize variables for unconditional += appending
EXTRA_DIST = $(test_scripts) makefile.msc.in casefold.txt casemap.txt \
	gen-casefold-txt.pl gen-casemap-txt.pl iochannel-test-infile \
	utf8.txt timeloop-basic.c assert-msg-test.gdb
TEST_PROGS = testglib
SUBDIRS = gobject refcount
AM_CPPFLAGS = \
	$(gmodule_INCLUDES)			\
	-DGLIB_DISABLE_DEPRECATION_WARNINGS	\
	$(GLIB_DEBUG_FLAGS)

AM_CFLAGS = -g
EFENCE = 
libglib = $(top_builddir)/glib/libglib-2.0.la
libgthread = $(top_builddir)/gthread/libgthread-2.0.la
libgmodule = $(top_builddir)/gmodule/libgmodule-2.0.la
libgobject = $(top_builddir)/gobject/libgobject-2.0.la
libadd_libgmodule = $(libgmodule)
libadd_libglib = $(libglib)
#no_undefined = -no-undefined
#module_test_exp = module-test.exp
#spawn_test_win32_gui = spawn-test-win32-gui
#spawn_test_win32_gui_LDFLAGS = -mwindows
BUILT_EXTRA_DIST = \
	makefile.msc

#CXX_TEST = 
CXX_TEST = cxx-test
cxx_test_LDADD = $(progs_ldadd)
cxx_test_SOURCES = cxx-test.C
timeloop = timeloop timeloop-closure
testglib_SOURCES = testglib.c
testglib_LDADD = $(libglib)
testgdate_LDADD = $(libglib)
testgdateparser_LDADD = $(libglib)
unicode_normalize_LDADD = $(libglib)
unicode_collate_LDADD = $(libglib)
assert_msg_test_LDADD = $(libglib)
timeloop_LDADD = $(libglib)
timeloop_closure_LDADD = $(libglib) $(libgobject)
datetime_LDADD = $(libglib)
testgobject_LDADD = $(libglib) $(libgobject)
test_programs = \
	atomic-test				\
	bit-test				\
	$(CXX_TEST)				\
	child-test				\
	completion-test				\
	dirname-test				\
	file-test				\
	env-test				\
	gio-test				\
	iochannel-test				\
	mainloop-test				\
	mapping-test				\
	module-test				\
	onceinit				\
	asyncqueue-test				\
	qsort-test				\
	relation-test				\
	slice-test				\
	slice-color				\
	slice-concurrent			\
	slice-threadinit			\
	sources					\
	spawn-test				\
	$(spawn_test_win32_gui)			\
	thread-test				\
	threadpool-test				\
	type-test				\
	unicode-caseconv			\
	unicode-encoding

test_scripts = run-collate-tests.sh run-assert-msg-test.sh
test_script_support_programs = unicode-collate
TESTS_ENVIRONMENT = srcdir=$(srcdir) \
	LIBCHARSET_ALIAS_DIR=$(top_builddir)/glib/libcharset \
	MALLOC_CHECK_=2	\
        MALLOC_PERTURB_=$$(($${RANDOM:-256} % 256))

progs_ldadd = $(EFENCE) $(libglib) $(EFENCE)
thread_ldadd = $(libgthread) $(G_THREAD_LIBS) $(progs_ldadd)
module_ldadd = $(libgmodule) $(G_MODULE_LIBS) $(progs_ldadd)
atomic_test_LDADD = $(progs_ldadd)
bit_test_LDADD = $(progs_ldadd)
child_test_LDADD = $(thread_ldadd)
completion_test_LDADD = $(progs_ldadd)
dirname_test_LDADD = $(progs_ldadd)
file_test_LDADD = $(progs_ldadd)
env_test_LDADD = $(progs_ldadd)
gio_test_LDADD = $(progs_ldadd)
iochannel_test_LDADD = $(progs_ldadd)
mainloop_test_LDADD = $(thread_ldadd)
mapping_test_LDADD = $(progs_ldadd)
module_test_LDADD = $(module_ldadd) $(module_test_exp)
module_test_LDFLAGS = $(G_MODULE_LDFLAGS)
onceinit_LDADD = $(thread_ldadd)
asyncqueue_test_LDADD = $(thread_ldadd)
qsort_test_LDADD = $(progs_ldadd)
relation_test_LDADD = $(progs_ldadd)
slice_test_SOURCES = slice-test.c memchunks.c
slice_test_LDADD = $(thread_ldadd)
slice_color_SOURCES = slice-color.c memchunks.c
slice_color_LDADD = $(thread_ldadd)
slice_concurrent_SOURCES = slice-concurrent.c
slice_concurrent_LDADD = $(thread_ldadd)
slice_threadinit_SOURCES = slice-threadinit.c
slice_threadinit_LDADD = $(thread_ldadd)
sources_LDADD = $(progs_ldadd)
spawn_test_LDADD = $(progs_ldadd)
thread_test_LDADD = $(thread_ldadd)
threadpool_test_LDADD = $(thread_ldadd)
type_test_LDADD = $(progs_ldadd)
unicode_encoding_LDADD = $(progs_ldadd)
unicode_caseconv_LDADD = $(progs_ldadd)
noinst_LTLIBRARIES = libmoduletestplugin_a.la libmoduletestplugin_b.la
libmoduletestplugin_a_la_SOURCES = libmoduletestplugin_a.c
libmoduletestplugin_a_la_LDFLAGS = $(G_MODULE_LDFLAGS) -avoid-version -module $(no_undefined) -rpath $(libdir)
libmoduletestplugin_a_la_LIBADD = $(G_MODULE_LIBS) $(libadd_libgmodule) $(libadd_libglib)
libmoduletestplugin_b_la_SOURCES = libmoduletestplugin_b.c
libmoduletestplugin_b_la_LDFLAGS = $(G_MODULE_LDFLAGS) -avoid-version -module $(no_undefined) -rpath $(libdir)
libmoduletestplugin_b_la_LIBADD = $(G_MODULE_LIBS) $(libadd_libgmodule) $(libadd_libglib)
DISTCLEANFILES = \
	iochannel-test-outfile 	\
	file-test-get-contents 	\
	maptest 		\
	mapchild 		\
	collate.out

all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.decl:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
makefile.msc: $(top_builddir)/config.status $(srcdir)/makefile.msc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmoduletestplugin_a.la: $(libmoduletestplugin_a_la_OBJECTS) $(libmoduletestplugin_a_la_DEPENDENCIES) $(EXTRA_libmoduletestplugin_a_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmoduletestplugin_a_la_LINK)  $(libmoduletestplugin_a_la_OBJECTS) $(libmoduletestplugin_a_la_LIBADD) $(LIBS)

libmoduletestplugin_b.la: $(libmoduletestplugin_b_la_OBJECTS) $(libmoduletestplugin_b_la_DEPENDENCIES) $(EXTRA_libmoduletestplugin_b_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmoduletestplugin_b_la_LINK)  $(libmoduletestplugin_b_la_OBJECTS) $(libmoduletestplugin_b_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

assert-msg-test$(EXEEXT): $(assert_msg_test_OBJECTS) $(assert_msg_test_DEPENDENCIES) $(EXTRA_assert_msg_test_DEPENDENCIES) 
	@rm -f assert-msg-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(assert_msg_test_OBJECTS) $(assert_msg_test_LDADD) $(LIBS)

asyncqueue-test$(EXEEXT): $(asyncqueue_test_OBJECTS) $(asyncqueue_test_DEPENDENCIES) $(EXTRA_asyncqueue_test_DEPENDENCIES) 
	@rm -f asyncqueue-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(asyncqueue_test_OBJECTS) $(asyncqueue_test_LDADD) $(LIBS)

atomic-test$(EXEEXT): $(atomic_test_OBJECTS) $(atomic_test_DEPENDENCIES) $(EXTRA_atomic_test_DEPENDENCIES) 
	@rm -f atomic-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(atomic_test_OBJECTS) $(atomic_test_LDADD) $(LIBS)

bit-test$(EXEEXT): $(bit_test_OBJECTS) $(bit_test_DEPENDENCIES) $(EXTRA_bit_test_DEPENDENCIES) 
	@rm -f bit-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bit_test_OBJECTS) $(bit_test_LDADD) $(LIBS)

child-test$(EXEEXT): $(child_test_OBJECTS) $(child_test_DEPENDENCIES) $(EXTRA_child_test_DEPENDENCIES) 
	@rm -f child-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(child_test_OBJECTS) $(child_test_LDADD) $(LIBS)

completion-test$(EXEEXT): $(completion_test_OBJECTS) $(completion_test_DEPENDENCIES) $(EXTRA_completion_test_DEPENDENCIES) 
	@rm -f completion-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(completion_test_OBJECTS) $(completion_test_LDADD) $(LIBS)

cxx-test$(EXEEXT): $(cxx_test_OBJECTS) $(cxx_test_DEPENDENCIES) $(EXTRA_cxx_test_DEPENDENCIES) 
	@rm -f cxx-test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cxx_test_OBJECTS) $(cxx_test_LDADD) $(LIBS)

datetime$(EXEEXT): $(datetime_OBJECTS) $(datetime_DEPENDENCIES) $(EXTRA_datetime_DEPENDENCIES) 
	@rm -f datetime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datetime_OBJECTS) $(datetime_LDADD) $(LIBS)

dirname-test$(EXEEXT): $(dirname_test_OBJECTS) $(dirname_test_DEPENDENCIES) $(EXTRA_dirname_test_DEPENDENCIES) 
	@rm -f dirname-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dirname_test_OBJECTS) $(dirname_test_LDADD) $(LIBS)

env-test$(EXEEXT): $(env_test_OBJECTS) $(env_test_DEPENDENCIES) $(EXTRA_env_test_DEPENDENCIES) 
	@rm -f env-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(env_test_OBJECTS) $(env_test_LDADD) $(LIBS)

file-test$(EXEEXT): $(file_test_OBJECTS) $(file_test_DEPENDENCIES) $(EXTRA_file_test_DEPENDENCIES) 
	@rm -f file-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(file_test_OBJECTS) $(file_test_LDADD) $(LIBS)

gio-test$(EXEEXT): $(gio_test_OBJECTS) $(gio_test_DEPENDENCIES) $(EXTRA_gio_test_DEPENDENCIES) 
	@rm -f gio-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gio_test_OBJECTS) $(gio_test_LDADD) $(LIBS)

iochannel-test$(EXEEXT): $(iochannel_test_OBJECTS) $(iochannel_test_DEPENDENCIES) $(EXTRA_iochannel_test_DEPENDENCIES) 
	@rm -f iochannel-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iochannel_test_OBJECTS) $(iochannel_test_LDADD) $(LIBS)

mainloop-test$(EXEEXT): $(mainloop_test_OBJECTS) $(mainloop_test_DEPENDENCIES) $(EXTRA_mainloop_test_DEPENDENCIES) 
	@rm -f mainloop-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mainloop_test_OBJECTS) $(mainloop_test_LDADD) $(LIBS)

mapping-test$(EXEEXT): $(mapping_test_OBJECTS) $(mapping_test_DEPENDENCIES) $(EXTRA_mapping_test_DEPENDENCIES) 
	@rm -f mapping-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mapping_test_OBJECTS) $(mapping_test_LDADD) $(LIBS)

module-test$(EXEEXT): $(module_test_OBJECTS) $(module_test_DEPENDENCIES) $(EXTRA_module_test_DEPENDENCIES) 
	@rm -f module-test$(EXEEXT)
	$(AM_V_CCLD)$(module_test_LINK) $(module_test_OBJECTS) $(module_test_LDADD) $(LIBS)

onceinit$(EXEEXT): $(onceinit_OBJECTS) $(onceinit_DEPENDENCIES) $(EXTRA_onceinit_DEPENDENCIES) 
	@rm -f onceinit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onceinit_OBJECTS) $(onceinit_LDADD) $(LIBS)

qsort-test$(EXEEXT): $(qsort_test_OBJECTS) $(qsort_test_DEPENDENCIES) $(EXTRA_qsort_test_DEPENDENCIES) 
	@rm -f qsort-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qsort_test_OBJECTS) $(qsort_test_LDADD) $(LIBS)

relation-test$(EXEEXT): $(relation_test_OBJECTS) $(relation_test_DEPENDENCIES) $(EXTRA_relation_test_DEPENDENCIES) 
	@rm -f relation-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(relation_test_OBJECTS) $(relation_test_LDADD) $(LIBS)

slice-color$(EXEEXT): $(slice_color_OBJECTS) $(slice_color_DEPENDENCIES) $(EXTRA_slice_color_DEPENDENCIES) 
	@rm -f slice-color$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slice_color_OBJECTS) $(slice_color_LDADD) $(LIBS)

slice-concurrent$(EXEEXT): $(slice_concurrent_OBJECTS) $(slice_concurrent_DEPENDENCIES) $(EXTRA_slice_concurrent_DEPENDENCIES) 
	@rm -f slice-concurrent$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slice_concurrent_OBJECTS) $(slice_concurrent_LDADD) $(LIBS)

slice-test$(EXEEXT): $(slice_test_OBJECTS) $(slice_test_DEPENDENCIES) $(EXTRA_slice_test_DEPENDENCIES) 
	@rm -f slice-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slice_test_OBJECTS) $(slice_test_LDADD) $(LIBS)

slice-threadinit$(EXEEXT): $(slice_threadinit_OBJECTS) $(slice_threadinit_DEPENDENCIES) $(EXTRA_slice_threadinit_DEPENDENCIES) 
	@rm -f slice-threadinit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slice_threadinit_OBJECTS) $(slice_threadinit_LDADD) $(LIBS)

sources$(EXEEXT): $(sources_OBJECTS) $(sources_DEPENDENCIES) $(EXTRA_sources_DEPENDENCIES) 
	@rm -f sources$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sources_OBJECTS) $(sources_LDADD) $(LIBS)

spawn-test$(EXEEXT): $(spawn_test_OBJECTS) $(spawn_test_DEPENDENCIES) $(EXTRA_spawn_test_DEPENDENCIES) 
	@rm -f spawn-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spawn_test_OBJECTS) $(spawn_test_LDADD) $(LIBS)

spawn-test-win32-gui$(EXEEXT): $(spawn_test_win32_gui_OBJECTS) $(spawn_test_win32_gui_DEPENDENCIES) $(EXTRA_spawn_test_win32_gui_DEPENDENCIES) 
	@rm -f spawn-test-win32-gui$(EXEEXT)
	$(AM_V_CCLD)$(spawn_test_win32_gui_LINK) $(spawn_test_win32_gui_OBJECTS) $(spawn_test_win32_gui_LDADD) $(LIBS)

testgdate$(EXEEXT): $(testgdate_OBJECTS) $(testgdate_DEPENDENCIES) $(EXTRA_testgdate_DEPENDENCIES) 
	@rm -f testgdate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testgdate_OBJECTS) $(testgdate_LDADD) $(LIBS)

testgdateparser$(EXEEXT): $(testgdateparser_OBJECTS) $(testgdateparser_DEPENDENCIES) $(EXTRA_testgdateparser_DEPENDENCIES) 
	@rm -f testgdateparser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testgdateparser_OBJECTS) $(testgdateparser_LDADD) $(LIBS)

testglib$(EXEEXT): $(testglib_OBJECTS) $(testglib_DEPENDENCIES) $(EXTRA_testglib_DEPENDENCIES) 
	@rm -f testglib$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testglib_OBJECTS) $(testglib_LDADD) $(LIBS)

testgobject$(EXEEXT): $(testgobject_OBJECTS) $(testgobject_DEPENDENCIES) $(EXTRA_testgobject_DEPENDENCIES) 
	@rm -f testgobject$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testgobject_OBJECTS) $(testgobject_LDADD) $(LIBS)

thread-test$(EXEEXT): $(thread_test_OBJECTS) $(thread_test_DEPENDENCIES) $(EXTRA_thread_test_DEPENDENCIES) 
	@rm -f thread-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_test_OBJECTS) $(thread_test_LDADD) $(LIBS)

threadpool-test$(EXEEXT): $(threadpool_test_OBJECTS) $(threadpool_test_DEPENDENCIES) $(EXTRA_threadpool_test_DEPENDENCIES) 
	@rm -f threadpool-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(threadpool_test_OBJECTS) $(threadpool_test_LDADD) $(LIBS)

timeloop$(EXEEXT): $(timeloop_OBJECTS) $(timeloop_DEPENDENCIES) $(EXTRA_timeloop_DEPENDENCIES) 
	@rm -f timeloop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timeloop_OBJECTS) $(timeloop_LDADD) $(LIBS)

timeloop-closure$(EXEEXT): $(timeloop_closure_OBJECTS) $(timeloop_closure_DEPENDENCIES) $(EXTRA_timeloop_closure_DEPENDENCIES) 
	@rm -f timeloop-closure$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timeloop_closure_OBJECTS) $(timeloop_closure_LDADD) $(LIBS)

type-test$(EXEEXT): $(type_test_OBJECTS) $(type_test_DEPENDENCIES) $(EXTRA_type_test_DEPENDENCIES) 
	@rm -f type-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(type_test_OBJECTS) $(type_test_LDADD) $(LIBS)

unicode-caseconv$(EXEEXT): $(unicode_caseconv_OBJECTS) $(unicode_caseconv_DEPENDENCIES) $(EXTRA_unicode_caseconv_DEPENDENCIES) 
	@rm -f unicode-caseconv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unicode_caseconv_OBJECTS) $(unicode_caseconv_LDADD) $(LIBS)

unicode-collate$(EXEEXT): $(unicode_collate_OBJECTS) $(unicode_collate_DEPENDENCIES) $(EXTRA_unicode_collate_DEPENDENCIES) 
	@rm -f unicode-collate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unicode_collate_OBJECTS) $(unicode_collate_LDADD) $(LIBS)

unicode-encoding$(EXEEXT): $(unicode_encoding_OBJECTS) $(unicode_encoding_DEPENDENCIES) $(EXTRA_unicode_encoding_DEPENDENCIES) 
	@rm -f unicode-encoding$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unicode_encoding_OBJECTS) $(unicode_encoding_LDADD) $(LIBS)

unicode-normalize$(EXEEXT): $(unicode_normalize_OBJECTS) $(unicode_normalize_DEPENDENCIES) $(EXTRA_unicode_normalize_DEPENDENCIES) 
	@rm -f unicode-normalize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unicode_normalize_OBJECTS) $(unicode_normalize_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/assert-msg-test.Po
#include ./$(DEPDIR)/asyncqueue-test.Po
#include ./$(DEPDIR)/atomic-test.Po
#include ./$(DEPDIR)/bit-test.Po
#include ./$(DEPDIR)/child-test.Po
#include ./$(DEPDIR)/completion-test.Po
#include ./$(DEPDIR)/cxx-test.Po
#include ./$(DEPDIR)/datetime.Po
#include ./$(DEPDIR)/dirname-test.Po
#include ./$(DEPDIR)/env-test.Po
#include ./$(DEPDIR)/file-test.Po
#include ./$(DEPDIR)/gio-test.Po
#include ./$(DEPDIR)/iochannel-test.Po
#include ./$(DEPDIR)/libmoduletestplugin_a.Plo
#include ./$(DEPDIR)/libmoduletestplugin_b.Plo
#include ./$(DEPDIR)/mainloop-test.Po
#include ./$(DEPDIR)/mapping-test.Po
#include ./$(DEPDIR)/memchunks.Po
#include ./$(DEPDIR)/module-test.Po
#include ./$(DEPDIR)/onceinit.Po
#include ./$(DEPDIR)/qsort-test.Po
#include ./$(DEPDIR)/relation-test.Po
#include ./$(DEPDIR)/slice-color.Po
#include ./$(DEPDIR)/slice-concurrent.Po
#include ./$(DEPDIR)/slice-test.Po
#include ./$(DEPDIR)/slice-threadinit.Po
#include ./$(DEPDIR)/sources.Po
#include ./$(DEPDIR)/spawn-test-win32-gui.Po
#include ./$(DEPDIR)/spawn-test.Po
#include ./$(DEPDIR)/testgdate.Po
#include ./$(DEPDIR)/testgdateparser.Po
#include ./$(DEPDIR)/testglib.Po
#include ./$(DEPDIR)/testgobject.Po
#include ./$(DEPDIR)/thread-test.Po
#include ./$(DEPDIR)/threadpool-test.Po
#include ./$(DEPDIR)/timeloop-closure.Po
#include ./$(DEPDIR)/timeloop.Po
#include ./$(DEPDIR)/type-test.Po
#include ./$(DEPDIR)/unicode-caseconv.Po
#include ./$(DEPDIR)/unicode-collate.Po
#include ./$(DEPDIR)/unicode-encoding.Po
#include ./$(DEPDIR)/unicode-normalize.Po

.C.o:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
#	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
atomic-test.log: atomic-test$(EXEEXT)
	@p='atomic-test$(EXEEXT)'; \
	b='atomic-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bit-test.log: bit-test$(EXEEXT)
	@p='bit-test$(EXEEXT)'; \
	b='bit-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cxx-test.log: cxx-test$(EXEEXT)
	@p='cxx-test$(EXEEXT)'; \
	b='cxx-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
child-test.log: child-test$(EXEEXT)
	@p='child-test$(EXEEXT)'; \
	b='child-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
completion-test.log: completion-test$(EXEEXT)
	@p='completion-test$(EXEEXT)'; \
	b='completion-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dirname-test.log: dirname-test$(EXEEXT)
	@p='dirname-test$(EXEEXT)'; \
	b='dirname-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
file-test.log: file-test$(EXEEXT)
	@p='file-test$(EXEEXT)'; \
	b='file-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
env-test.log: env-test$(EXEEXT)
	@p='env-test$(EXEEXT)'; \
	b='env-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gio-test.log: gio-test$(EXEEXT)
	@p='gio-test$(EXEEXT)'; \
	b='gio-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
iochannel-test.log: iochannel-test$(EXEEXT)
	@p='iochannel-test$(EXEEXT)'; \
	b='iochannel-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mainloop-test.log: mainloop-test$(EXEEXT)
	@p='mainloop-test$(EXEEXT)'; \
	b='mainloop-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mapping-test.log: mapping-test$(EXEEXT)
	@p='mapping-test$(EXEEXT)'; \
	b='mapping-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
module-test.log: module-test$(EXEEXT)
	@p='module-test$(EXEEXT)'; \
	b='module-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
onceinit.log: onceinit$(EXEEXT)
	@p='onceinit$(EXEEXT)'; \
	b='onceinit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
asyncqueue-test.log: asyncqueue-test$(EXEEXT)
	@p='asyncqueue-test$(EXEEXT)'; \
	b='asyncqueue-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
qsort-test.log: qsort-test$(EXEEXT)
	@p='qsort-test$(EXEEXT)'; \
	b='qsort-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
relation-test.log: relation-test$(EXEEXT)
	@p='relation-test$(EXEEXT)'; \
	b='relation-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
slice-test.log: slice-test$(EXEEXT)
	@p='slice-test$(EXEEXT)'; \
	b='slice-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
slice-color.log: slice-color$(EXEEXT)
	@p='slice-color$(EXEEXT)'; \
	b='slice-color'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
slice-concurrent.log: slice-concurrent$(EXEEXT)
	@p='slice-concurrent$(EXEEXT)'; \
	b='slice-concurrent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
slice-threadinit.log: slice-threadinit$(EXEEXT)
	@p='slice-threadinit$(EXEEXT)'; \
	b='slice-threadinit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sources.log: sources$(EXEEXT)
	@p='sources$(EXEEXT)'; \
	b='sources'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spawn-test.log: spawn-test$(EXEEXT)
	@p='spawn-test$(EXEEXT)'; \
	b='spawn-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spawn-test-win32-gui.log: spawn-test-win32-gui$(EXEEXT)
	@p='spawn-test-win32-gui$(EXEEXT)'; \
	b='spawn-test-win32-gui'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread-test.log: thread-test$(EXEEXT)
	@p='thread-test$(EXEEXT)'; \
	b='thread-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
threadpool-test.log: threadpool-test$(EXEEXT)
	@p='threadpool-test$(EXEEXT)'; \
	b='threadpool-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
type-test.log: type-test$(EXEEXT)
	@p='type-test$(EXEEXT)'; \
	b='type-test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unicode-caseconv.log: unicode-caseconv$(EXEEXT)
	@p='unicode-caseconv$(EXEEXT)'; \
	b='unicode-caseconv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unicode-encoding.log: unicode-encoding$(EXEEXT)
	@p='unicode-encoding$(EXEEXT)'; \
	b='unicode-encoding'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
run-collate-tests.sh.log: run-collate-tests.sh
	@p='run-collate-tests.sh'; \
	b='run-collate-tests.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
run-assert-msg-test.sh.log: run-assert-msg-test.sh
	@p='run-assert-msg-test.sh'; \
	b='run-assert-msg-test.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am check-local clean clean-checkPROGRAMS \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am dist-hook \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


### testing rules

# test: run all tests in cwd and subdirs
test: test-nonrecursive
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done

# test-nonrecursive: run tests only in cwd
test-nonrecursive: ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || G_DEBUG=gc-friendly MALLOC_CHECK_=2 MALLOC_PERTURB_=$$(($${RANDOM:-256} % 256)) ${GTESTER} --verbose ${TEST_PROGS}
#test-nonrecursive:

# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  if test -d "$(top_srcdir)/.git" ; then \
	    REVISION=`git describe` ; \
	  else \
	    REVISION=$(VERSION) ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>'              > $@.xml ; \
	    echo '<report-collection>'               >> $@.xml ; \
	    echo '<info>'                            >> $@.xml ; \
	    echo '  <package>$(PACKAGE)</package>'   >> $@.xml ; \
	    echo '  <version>$(VERSION)</version>'   >> $@.xml ; \
	    echo "  <revision>$$REVISION</revision>" >> $@.xml ; \
	    echo '</info>'                           >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report test-nonrecursive

.PHONY: lcov genlcov lcov-clean
# use recursive makes in order to ignore errors during check
lcov:
	-$(MAKE) $(AM_MAKEFLAGS) -k check
	$(MAKE) $(AM_MAKEFLAGS) genlcov

# we have to massage the lcov.info file slightly to hide the effect of libtool
# placing the objects files in the .libs/ directory separate from the *.c
# we also have to delete tests/.libs/libmoduletestplugin_*.gcda
genlcov:
	rm -f $(top_builddir)/tests/.libs/libmoduletestplugin_*.gcda
	$(LTP) --directory $(top_builddir) --capture --output-file glib-lcov.info --test-name GLIB_PERF --no-checksum --compat-libtool
	LANG=C $(LTP_GENHTML) --prefix $(top_builddir) --output-directory glib-lcov --title "GLib Code Coverage" --legend --show-details glib-lcov.info
	@echo "file://$(abs_top_builddir)/glib-lcov/index.html"

lcov-clean:
	-$(LTP) --directory $(top_builddir) -z
	-rm -rf glib-lcov.info glib-lcov
	-find -name '*.gcda' -print | xargs rm

# run tests in cwd as part of make check
check-local: test-nonrecursive

#module-test.exp: module-test.o
#	$(DLLTOOL) --output-exp module-test.exp module-test.o

dist-hook: $(BUILT_EXTRA_DIST)
	files='$(BUILT_EXTRA_DIST)'; 				\
	for f in $$files; do 					\
	  if test -f $$f; then d=.; else d=$(srcdir); fi; 	\
	  cp $$d/$$f $(distdir) || exit 1; done
	mkdir $(distdir)/collate;          			\
	for f in $(srcdir)/collate/* ; do  			\
          if test -f $$f; then cp $$f $(distdir)/collate; fi; done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
