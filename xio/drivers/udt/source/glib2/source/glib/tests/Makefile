# Makefile.in generated by automake 1.13.4 from Makefile.am.
# glib/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GLIB - Library of useful C routines


am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/glib
pkgincludedir = $(includedir)/glib
pkglibdir = $(libdir)/glib
pkglibexecdir = $(libexecdir)/glib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/Makefile.decl $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp
noinst_PROGRAMS = $(am__EXEEXT_3) test-spawn-echo$(EXEEXT)
am__append_1 = -Wstrict-aliasing=2
am__append_2 = gwakeup-fallback
am__append_3 = unix include
subdir = glib/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4macros/attributes.m4 \
	$(top_srcdir)/m4macros/gtk-doc.m4 \
	$(top_srcdir)/m4macros/libtool.m4 \
	$(top_srcdir)/m4macros/ltoptions.m4 \
	$(top_srcdir)/m4macros/ltsugar.m4 \
	$(top_srcdir)/m4macros/ltversion.m4 \
	$(top_srcdir)/m4macros/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/acglib.m4 \
	$(top_srcdir)/glib/libcharset/codeset.m4 \
	$(top_srcdir)/glib/libcharset/glibc21.m4 \
	$(top_srcdir)/m4macros/glib-gettext.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = gwakeup-fallback$(EXEEXT)
am__EXEEXT_2 = unix$(EXEEXT) include$(EXEEXT)
am__EXEEXT_3 = array-test$(EXEEXT) asyncqueue$(EXEEXT) atomic$(EXEEXT) \
	base64$(EXEEXT) bitlock$(EXEEXT) bookmarkfile$(EXEEXT) \
	bytes$(EXEEXT) cache$(EXEEXT) checksum$(EXEEXT) \
	collate$(EXEEXT) cond$(EXEEXT) convert$(EXEEXT) \
	dataset$(EXEEXT) date$(EXEEXT) dir$(EXEEXT) \
	environment$(EXEEXT) error$(EXEEXT) fileutils$(EXEEXT) \
	gdatetime$(EXEEXT) gvariant$(EXEEXT) gwakeup$(EXEEXT) \
	hash$(EXEEXT) hmac$(EXEEXT) hook$(EXEEXT) hostutils$(EXEEXT) \
	keyfile$(EXEEXT) list$(EXEEXT) logging$(EXEEXT) \
	mainloop$(EXEEXT) mappedfile$(EXEEXT) markup-parse$(EXEEXT) \
	markup-collect$(EXEEXT) markup-escape$(EXEEXT) \
	markup-subparser$(EXEEXT) mem-overflow$(EXEEXT) mutex$(EXEEXT) \
	node$(EXEEXT) once$(EXEEXT) option-context$(EXEEXT) \
	option-argv0$(EXEEXT) pattern$(EXEEXT) private$(EXEEXT) \
	protocol$(EXEEXT) queue$(EXEEXT) rand$(EXEEXT) \
	rec-mutex$(EXEEXT) regex$(EXEEXT) rwlock$(EXEEXT) \
	scannerapi$(EXEEXT) sequence$(EXEEXT) shell$(EXEEXT) \
	slice$(EXEEXT) slist$(EXEEXT) sort$(EXEEXT) \
	spawn-multithreaded$(EXEEXT) spawn-singlethread$(EXEEXT) \
	strfuncs$(EXEEXT) string$(EXEEXT) testing$(EXEEXT) \
	test-printf$(EXEEXT) thread$(EXEEXT) timeout$(EXEEXT) \
	tree$(EXEEXT) utf8-performance$(EXEEXT) utf8-pointer$(EXEEXT) \
	utf8-validate$(EXEEXT) utf8-misc$(EXEEXT) utils$(EXEEXT) \
	unicode$(EXEEXT) uri$(EXEEXT) 1bit-mutex$(EXEEXT) \
	1bit-emufutex$(EXEEXT) 642026$(EXEEXT) 642026-ec$(EXEEXT) \
	$(am__EXEEXT_1) $(am__EXEEXT_2)
PROGRAMS = $(noinst_PROGRAMS)
am_1bit_emufutex_OBJECTS = 1bit_emufutex-1bit-mutex.$(OBJEXT)
1bit_emufutex_OBJECTS = $(am_1bit_emufutex_OBJECTS)
1bit_emufutex_LDADD = $(LDADD)
1bit_emufutex_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
1bit_emufutex_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(1bit_emufutex_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
1bit_mutex_SOURCES = 1bit-mutex.c
1bit_mutex_OBJECTS = 1bit-mutex.$(OBJEXT)
1bit_mutex_LDADD = $(LDADD)
1bit_mutex_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
642026_SOURCES = 642026.c
642026_OBJECTS = 642026.$(OBJEXT)
642026_LDADD = $(LDADD)
642026_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
am_642026_ec_OBJECTS = 642026_ec-642026.$(OBJEXT)
642026_ec_OBJECTS = $(am_642026_ec_OBJECTS)
642026_ec_LDADD = $(LDADD)
642026_ec_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
642026_ec_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(642026_ec_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
array_test_SOURCES = array-test.c
array_test_OBJECTS = array-test.$(OBJEXT)
array_test_LDADD = $(LDADD)
array_test_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
asyncqueue_SOURCES = asyncqueue.c
asyncqueue_OBJECTS = asyncqueue.$(OBJEXT)
asyncqueue_LDADD = $(LDADD)
asyncqueue_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
atomic_SOURCES = atomic.c
atomic_OBJECTS = atomic-atomic.$(OBJEXT)
atomic_LDADD = $(LDADD)
atomic_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
atomic_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(atomic_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
base64_SOURCES = base64.c
base64_OBJECTS = base64.$(OBJEXT)
base64_LDADD = $(LDADD)
base64_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
bitlock_SOURCES = bitlock.c
bitlock_OBJECTS = bitlock.$(OBJEXT)
bitlock_LDADD = $(LDADD)
bitlock_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
bookmarkfile_SOURCES = bookmarkfile.c
bookmarkfile_OBJECTS = bookmarkfile.$(OBJEXT)
bookmarkfile_LDADD = $(LDADD)
bookmarkfile_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
bytes_SOURCES = bytes.c
bytes_OBJECTS = bytes.$(OBJEXT)
bytes_LDADD = $(LDADD)
bytes_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
cache_SOURCES = cache.c
cache_OBJECTS = cache.$(OBJEXT)
cache_LDADD = $(LDADD)
cache_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
checksum_SOURCES = checksum.c
checksum_OBJECTS = checksum.$(OBJEXT)
checksum_LDADD = $(LDADD)
checksum_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
collate_SOURCES = collate.c
collate_OBJECTS = collate.$(OBJEXT)
collate_LDADD = $(LDADD)
collate_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
cond_SOURCES = cond.c
cond_OBJECTS = cond.$(OBJEXT)
cond_LDADD = $(LDADD)
cond_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
convert_SOURCES = convert.c
convert_OBJECTS = convert.$(OBJEXT)
convert_LDADD = $(LDADD)
convert_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
dataset_SOURCES = dataset.c
dataset_OBJECTS = dataset.$(OBJEXT)
dataset_LDADD = $(LDADD)
dataset_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
date_SOURCES = date.c
date_OBJECTS = date.$(OBJEXT)
date_LDADD = $(LDADD)
date_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
dir_SOURCES = dir.c
dir_OBJECTS = dir.$(OBJEXT)
dir_LDADD = $(LDADD)
dir_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
environment_SOURCES = environment.c
environment_OBJECTS = environment.$(OBJEXT)
environment_LDADD = $(LDADD)
environment_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
error_SOURCES = error.c
error_OBJECTS = error.$(OBJEXT)
error_LDADD = $(LDADD)
error_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
fileutils_SOURCES = fileutils.c
fileutils_OBJECTS = fileutils.$(OBJEXT)
fileutils_LDADD = $(LDADD)
fileutils_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
gdatetime_SOURCES = gdatetime.c
gdatetime_OBJECTS = gdatetime.$(OBJEXT)
gdatetime_LDADD = $(LDADD)
gdatetime_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
gvariant_SOURCES = gvariant.c
gvariant_OBJECTS = gvariant.$(OBJEXT)
gvariant_LDADD = $(LDADD)
gvariant_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
am_gwakeup_OBJECTS = gwakeuptest.$(OBJEXT) gwakeup.$(OBJEXT)
gwakeup_OBJECTS = $(am_gwakeup_OBJECTS)
gwakeup_LDADD = $(LDADD)
gwakeup_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
am__gwakeup_fallback_SOURCES_DIST = gwakeuptest.c ../../glib/gwakeup.c
am_gwakeup_fallback_OBJECTS =  \
	gwakeup_fallback-gwakeuptest.$(OBJEXT) \
	gwakeup_fallback-gwakeup.$(OBJEXT)
gwakeup_fallback_OBJECTS = $(am_gwakeup_fallback_OBJECTS)
gwakeup_fallback_LDADD = $(LDADD)
gwakeup_fallback_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
gwakeup_fallback_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(gwakeup_fallback_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
hash_SOURCES = hash.c
hash_OBJECTS = hash.$(OBJEXT)
hash_LDADD = $(LDADD)
hash_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
hmac_SOURCES = hmac.c
hmac_OBJECTS = hmac.$(OBJEXT)
hmac_LDADD = $(LDADD)
hmac_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
hook_SOURCES = hook.c
hook_OBJECTS = hook.$(OBJEXT)
hook_LDADD = $(LDADD)
hook_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
hostutils_SOURCES = hostutils.c
hostutils_OBJECTS = hostutils.$(OBJEXT)
hostutils_LDADD = $(LDADD)
hostutils_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
include_SOURCES = include.c
include_OBJECTS = include.$(OBJEXT)
include_LDADD = $(LDADD)
include_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
keyfile_SOURCES = keyfile.c
keyfile_OBJECTS = keyfile.$(OBJEXT)
keyfile_LDADD = $(LDADD)
keyfile_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
list_SOURCES = list.c
list_OBJECTS = list.$(OBJEXT)
list_LDADD = $(LDADD)
list_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
logging_SOURCES = logging.c
logging_OBJECTS = logging.$(OBJEXT)
logging_LDADD = $(LDADD)
logging_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
mainloop_SOURCES = mainloop.c
mainloop_OBJECTS = mainloop.$(OBJEXT)
mainloop_LDADD = $(LDADD)
mainloop_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
mappedfile_SOURCES = mappedfile.c
mappedfile_OBJECTS = mappedfile.$(OBJEXT)
mappedfile_LDADD = $(LDADD)
mappedfile_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
markup_collect_SOURCES = markup-collect.c
markup_collect_OBJECTS = markup-collect.$(OBJEXT)
markup_collect_LDADD = $(LDADD)
markup_collect_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
markup_escape_SOURCES = markup-escape.c
markup_escape_OBJECTS = markup-escape.$(OBJEXT)
markup_escape_LDADD = $(LDADD)
markup_escape_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
markup_parse_SOURCES = markup-parse.c
markup_parse_OBJECTS = markup-parse.$(OBJEXT)
markup_parse_LDADD = $(LDADD)
markup_parse_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
markup_subparser_SOURCES = markup-subparser.c
markup_subparser_OBJECTS = markup-subparser.$(OBJEXT)
markup_subparser_LDADD = $(LDADD)
markup_subparser_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
mem_overflow_SOURCES = mem-overflow.c
mem_overflow_OBJECTS = mem-overflow.$(OBJEXT)
mem_overflow_LDADD = $(LDADD)
mem_overflow_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
mutex_SOURCES = mutex.c
mutex_OBJECTS = mutex.$(OBJEXT)
mutex_LDADD = $(LDADD)
mutex_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
node_SOURCES = node.c
node_OBJECTS = node.$(OBJEXT)
node_LDADD = $(LDADD)
node_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
once_SOURCES = once.c
once_OBJECTS = once.$(OBJEXT)
once_LDADD = $(LDADD)
once_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
option_argv0_SOURCES = option-argv0.c
option_argv0_OBJECTS = option-argv0.$(OBJEXT)
option_argv0_LDADD = $(LDADD)
option_argv0_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
option_context_SOURCES = option-context.c
option_context_OBJECTS = option-context.$(OBJEXT)
option_context_LDADD = $(LDADD)
option_context_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
pattern_SOURCES = pattern.c
pattern_OBJECTS = pattern.$(OBJEXT)
pattern_LDADD = $(LDADD)
pattern_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
private_SOURCES = private.c
private_OBJECTS = private.$(OBJEXT)
private_LDADD = $(LDADD)
private_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
private_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(private_LDFLAGS) $(LDFLAGS) -o $@
protocol_SOURCES = protocol.c
protocol_OBJECTS = protocol.$(OBJEXT)
protocol_LDADD = $(LDADD)
protocol_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
queue_SOURCES = queue.c
queue_OBJECTS = queue.$(OBJEXT)
queue_LDADD = $(LDADD)
queue_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
rand_SOURCES = rand.c
rand_OBJECTS = rand.$(OBJEXT)
rand_LDADD = $(LDADD)
rand_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
rec_mutex_SOURCES = rec-mutex.c
rec_mutex_OBJECTS = rec-mutex.$(OBJEXT)
rec_mutex_LDADD = $(LDADD)
rec_mutex_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
regex_SOURCES = regex.c
regex_OBJECTS = regex.$(OBJEXT)
regex_LDADD = $(LDADD)
regex_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
rwlock_SOURCES = rwlock.c
rwlock_OBJECTS = rwlock.$(OBJEXT)
rwlock_LDADD = $(LDADD)
rwlock_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
scannerapi_SOURCES = scannerapi.c
scannerapi_OBJECTS = scannerapi.$(OBJEXT)
scannerapi_LDADD = $(LDADD)
scannerapi_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
sequence_SOURCES = sequence.c
sequence_OBJECTS = sequence.$(OBJEXT)
sequence_LDADD = $(LDADD)
sequence_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
shell_SOURCES = shell.c
shell_OBJECTS = shell.$(OBJEXT)
shell_LDADD = $(LDADD)
shell_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
slice_SOURCES = slice.c
slice_OBJECTS = slice.$(OBJEXT)
slice_LDADD = $(LDADD)
slice_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
slist_SOURCES = slist.c
slist_OBJECTS = slist.$(OBJEXT)
slist_LDADD = $(LDADD)
slist_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
sort_SOURCES = sort.c
sort_OBJECTS = sort.$(OBJEXT)
sort_LDADD = $(LDADD)
sort_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
spawn_multithreaded_SOURCES = spawn-multithreaded.c
spawn_multithreaded_OBJECTS = spawn-multithreaded.$(OBJEXT)
spawn_multithreaded_LDADD = $(LDADD)
spawn_multithreaded_DEPENDENCIES =  \
	$(top_builddir)/glib/libglib-2.0.la
spawn_singlethread_SOURCES = spawn-singlethread.c
spawn_singlethread_OBJECTS = spawn-singlethread.$(OBJEXT)
spawn_singlethread_LDADD = $(LDADD)
spawn_singlethread_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
strfuncs_SOURCES = strfuncs.c
strfuncs_OBJECTS = strfuncs.$(OBJEXT)
strfuncs_LDADD = $(LDADD)
strfuncs_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
string_SOURCES = string.c
string_OBJECTS = string.$(OBJEXT)
string_LDADD = $(LDADD)
string_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
test_printf_SOURCES = test-printf.c
test_printf_OBJECTS = test-printf.$(OBJEXT)
test_printf_LDADD = $(LDADD)
test_printf_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
test_spawn_echo_SOURCES = test-spawn-echo.c
test_spawn_echo_OBJECTS = test-spawn-echo.$(OBJEXT)
test_spawn_echo_LDADD = $(LDADD)
test_spawn_echo_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
testing_SOURCES = testing.c
testing_OBJECTS = testing.$(OBJEXT)
testing_LDADD = $(LDADD)
testing_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
thread_SOURCES = thread.c
thread_OBJECTS = thread.$(OBJEXT)
thread_LDADD = $(LDADD)
thread_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
timeout_SOURCES = timeout.c
timeout_OBJECTS = timeout.$(OBJEXT)
timeout_LDADD = $(LDADD)
timeout_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
tree_SOURCES = tree.c
tree_OBJECTS = tree.$(OBJEXT)
tree_LDADD = $(LDADD)
tree_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
unicode_SOURCES = unicode.c
unicode_OBJECTS = unicode.$(OBJEXT)
unicode_LDADD = $(LDADD)
unicode_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
unix_SOURCES = unix.c
unix_OBJECTS = unix.$(OBJEXT)
unix_LDADD = $(LDADD)
unix_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
uri_SOURCES = uri.c
uri_OBJECTS = uri.$(OBJEXT)
uri_LDADD = $(LDADD)
uri_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utf8_misc_SOURCES = utf8-misc.c
utf8_misc_OBJECTS = utf8-misc.$(OBJEXT)
utf8_misc_LDADD = $(LDADD)
utf8_misc_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utf8_performance_SOURCES = utf8-performance.c
utf8_performance_OBJECTS = utf8-performance.$(OBJEXT)
utf8_performance_LDADD = $(LDADD)
utf8_performance_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utf8_pointer_SOURCES = utf8-pointer.c
utf8_pointer_OBJECTS = utf8-pointer.$(OBJEXT)
utf8_pointer_LDADD = $(LDADD)
utf8_pointer_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utf8_validate_SOURCES = utf8-validate.c
utf8_validate_OBJECTS = utf8-validate.$(OBJEXT)
utf8_validate_LDADD = $(LDADD)
utf8_validate_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
utils_SOURCES = utils.c
utils_OBJECTS = utils.$(OBJEXT)
utils_LDADD = $(LDADD)
utils_DEPENDENCIES = $(top_builddir)/glib/libglib-2.0.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(1bit_emufutex_SOURCES) 1bit-mutex.c 642026.c \
	$(642026_ec_SOURCES) array-test.c asyncqueue.c atomic.c \
	base64.c bitlock.c bookmarkfile.c bytes.c cache.c checksum.c \
	collate.c cond.c convert.c dataset.c date.c dir.c \
	environment.c error.c fileutils.c gdatetime.c gvariant.c \
	$(gwakeup_SOURCES) $(gwakeup_fallback_SOURCES) hash.c hmac.c \
	hook.c hostutils.c include.c keyfile.c list.c logging.c \
	mainloop.c mappedfile.c markup-collect.c markup-escape.c \
	markup-parse.c markup-subparser.c mem-overflow.c mutex.c \
	node.c once.c option-argv0.c option-context.c pattern.c \
	private.c protocol.c queue.c rand.c rec-mutex.c regex.c \
	rwlock.c scannerapi.c sequence.c shell.c slice.c slist.c \
	sort.c spawn-multithreaded.c spawn-singlethread.c strfuncs.c \
	string.c test-printf.c test-spawn-echo.c testing.c thread.c \
	timeout.c tree.c unicode.c unix.c uri.c utf8-misc.c \
	utf8-performance.c utf8-pointer.c utf8-validate.c utils.c
DIST_SOURCES = $(1bit_emufutex_SOURCES) 1bit-mutex.c 642026.c \
	$(642026_ec_SOURCES) array-test.c asyncqueue.c atomic.c \
	base64.c bitlock.c bookmarkfile.c bytes.c cache.c checksum.c \
	collate.c cond.c convert.c dataset.c date.c dir.c \
	environment.c error.c fileutils.c gdatetime.c gvariant.c \
	$(gwakeup_SOURCES) $(am__gwakeup_fallback_SOURCES_DIST) hash.c \
	hmac.c hook.c hostutils.c include.c keyfile.c list.c logging.c \
	mainloop.c mappedfile.c markup-collect.c markup-escape.c \
	markup-parse.c markup-subparser.c mem-overflow.c mutex.c \
	node.c once.c option-argv0.c option-context.c pattern.c \
	private.c protocol.c queue.c rand.c rec-mutex.c regex.c \
	rwlock.c scannerapi.c sequence.c shell.c slice.c slist.c \
	sort.c spawn-multithreaded.c spawn-singlethread.c strfuncs.c \
	string.c test-printf.c test-spawn-echo.c testing.c thread.c \
	timeout.c tree.c unicode.c unix.c uri.c utf8-misc.c \
	utf8-performance.c utf8-pointer.c utf8-validate.c utils.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABS_GLIB_RUNTIME_LIBDIR = 
ABS_TAPSET_DIR = $(datadir)/systemtap/tapset
ACLOCAL = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing aclocal-1.13
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing autoconf
AUTOHEADER = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing autoheader
AUTOMAKE = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing automake-1.13
AWK = gawk
CATALOGS =  af.gmo am.gmo ar.gmo as.gmo ast.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mai.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo tg.gmo th.gmo tl.gmo tr.gmo ug.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2 -fPIC -DPIC
CONFIG_STATUS_DEPENDENCIES = $(top_srcdir)/po/LINGUAS
CPP = gcc -E
CPPFLAGS =   -pthread
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS1_CFLAGS = 
DBUS1_LIBS = 
DBUS_DAEMON = dbus-daemon
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DTRACE = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FAM_LIBS = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = glib20
GIO = giounix.lo
GIO_MODULE_DIR = ${libdir}/gio/modules
GLIBC21 = yes
GLIB_BINARY_AGE = 3604
GLIB_COMPILE_RESOURCES = 
GLIB_COMPILE_SCHEMAS = 
GLIB_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
GLIB_EXTRA_CFLAGS = 
GLIB_GENMARSHAL = 
GLIB_HIDDEN_VISIBILITY_CFLAGS = -fvisibility=hidden
GLIB_INTERFACE_AGE = 4
GLIB_LINK_FLAGS = -Wl,-Bsymbolic-functions
GLIB_MAJOR_VERSION = 2
GLIB_MICRO_VERSION = 4
GLIB_MINOR_VERSION = 36
GLIB_RUNTIME_LIBDIR = 
GLIB_VERSION = 2.36.4
GLIB_WARN_CFLAGS = 
GLIB_WIN32_STATIC_COMPILATION_DEFINE = 
GMOFILES =  af.gmo am.gmo ar.gmo as.gmo ast.gmo az.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo en@shaw.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo id.gmo is.gmo it.gmo ja.gmo ka.gmo kk.gmo kn.gmo ko.gmo ku.gmo lt.gmo lv.gmo mai.gmo mg.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo nds.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo tg.gmo th.gmo tl.gmo tr.gmo ug.gmo tt.gmo uk.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GSPAWN = gspawn.lo
GTHREAD_COMPILE_IMPL_DEFINES = -D_POSIX4_DRAFT_SOURCE -D_POSIX4A_DRAFT10_SOURCE -U_OSF_SOURCE
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
G_LIBS_EXTRA = 
G_MODULE_BROKEN_RTLD_GLOBAL = 0
G_MODULE_HAVE_DLERROR = 1
G_MODULE_IMPL = G_MODULE_IMPL_DL
G_MODULE_LDFLAGS = -Wl,--export-dynamic
G_MODULE_LIBS = -ldl
G_MODULE_LIBS_EXTRA = 
G_MODULE_NEED_USCORE = 0
G_MODULE_PLUGIN_LIBS = 
G_MODULE_SUPPORTED = true
G_THREAD_CFLAGS = -pthread
G_THREAD_LIBS = -pthread -lrt
G_THREAD_LIBS_EXTRA = 
G_THREAD_LIBS_FOR_GTHREAD = -lpthread -lrt
HTML_DIR = ${datadir}/gtk-doc/html
ICONV_LIBS = 
INDENT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LD = /usr/bin/ld -m elf_x86_64 -m elf_x86_64
LDFLAGS =  
LIBELF_CFLAGS = 
LIBELF_LIBS = 
LIBFFI_CFLAGS = -I/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/libffi/lib/libffi-3.0.13/include  
LIBFFI_LIBS = -L/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/libffi/lib -lffi  
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_EXE_MACHINE_FLAG = X86
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
LT_AGE = 3600
LT_CURRENT = 3600
LT_CURRENT_MINUS_AGE = 0
LT_RELEASE = 2.36
LT_REVISION = 4
MAINT = 
MAKEINFO = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NAMESER_COMPAT_INCLUDE = 
NETWORK_LIBS = -lresolv 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glib
PACKAGE_NAME = glib
PACKAGE_STRING = glib 2.36.4
PACKAGE_TARNAME = glib
PACKAGE_URL = 
PACKAGE_VERSION = 2.36.4
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_LIBS = 
PCRE_REQUIRES = 
PCRE_WARN_CFLAGS =  -Wno-pointer-sign
PERL = perl
PERL_PATH = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/common/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/src:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/gfork/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/openssl_error/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/proxy/proxy_ssl/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/openssl_module/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/cert_utils/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/sysconfig/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/callout/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/callback/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/credential/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/proxy/proxy_core/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gssapi/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gss_assist/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gssapi_error/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/gsi:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/io/compat:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/control/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/usage/c/sender/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/pipe/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/server-lib/src:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/authz/error:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/authz/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/rate/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/popen/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/net_manager:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/server/src:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/protocol/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/scheduler_event_generator/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/lsf/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/transfer/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/client/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/copy/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/cache/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/rsl/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/callout_error:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/server/multi/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/simple_ca/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/sge/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/scripts:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/slurm/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_callout/error:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_callout/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/server_ez/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/gridftp_driver/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/fork/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_verify_myproxy_callout:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/gridmap_eppn_callout:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/condor/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi/proxy/proxy_utils/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/client/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/xioperf/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/gatekeeper/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gass/cache_program/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/lrms/pbs/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/auditing/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/myproxy/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gsi_openssh/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/client_tools/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gram/jobmanager/source:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/gridftp/hdfs:/mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/libffi/lib/pkgconfig
PLATFORMDEP = 
POFILES =  af.po am.po ar.po as.po ast.po az.po be.po be@latin.po bg.po bn.po bn_IN.po bs.po ca.po ca@valencia.po cs.po cy.po da.po de.po dz.po el.po en_CA.po en_GB.po en@shaw.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po id.po is.po it.po ja.po ka.po kk.po kn.po ko.po ku.po lt.po lv.po mai.po mg.po mk.po ml.po mn.po mr.po ms.po nb.po nds.po ne.po nl.po nn.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@latin.po sr@ije.po sv.po ta.po te.po tg.po th.po tl.po tr.po ug.po tt.po uk.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
RANLIB = ranlib
REBUILD = 
SED = /bin/sed
SELINUX_LIBS = -lselinux
SET_MAKE = 
SHELL = /bin/sh
SHTOOL = 
STRIP = strip
USE_NLS = yes
VERSION = 2.36.4
WINDRES = 
WSPIAPI_INCLUDE = 
XATTR_LIBS = 
XGETTEXT = /usr/bin/xgettext
XMLCATALOG = /usr/bin/xmlcatalog
XML_CATALOG_FILE = /etc/xml/catalog
XSLTPROC = /usr/bin/xsltproc
ZLIB_CFLAGS =  
ZLIB_LIBS = -lz  
abs_builddir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/glib/tests
abs_srcdir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/glib/tests
abs_top_builddir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source
abs_top_srcdir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source
ac_ct_AR = ar
ac_ct_CC = 
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
config_h_INCLUDES = -I$(top_builddir)
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gio_INCLUDES = $(gmodule_INCLUDES)
glib_INCLUDES = $(config_h_INCLUDES) -I$(top_builddir)/glib -I$(top_srcdir)/glib -I$(top_srcdir)
gmodule_INCLUDES = $(glib_INCLUDES) -I$(top_srcdir)/gmodule
gobject_INCLUDES = $(glib_INCLUDES)
host = x86_64-unknown-linux-gnu
host_alias = x86_64-unknown-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/source/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/glib
pkgpythondir = ${pythondir}/glib
prefix = /mnt/hgfs/SrcRepos/gt6-RAMSES_8_5/xio/drivers/udt/source/glib2
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib64/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#GTESTER = gtester 			# for non-GLIB packages
GTESTER = $(top_builddir)/glib/gtester			# for the GLIB package
GTESTER_REPORT = $(top_builddir)/glib/gtester-report	# for the GLIB package

# initialize variables for unconditional += appending
EXTRA_DIST = 4096-random-bytes keyfiletest.ini pages.ini \
	bookmarks.xbel empty echo-script
TEST_PROGS = array-test asyncqueue atomic base64 bitlock bookmarkfile \
	bytes cache checksum collate cond convert dataset date dir \
	environment error fileutils gdatetime gvariant gwakeup hash \
	hmac hook hostutils keyfile list logging mainloop mappedfile \
	markup-parse markup-collect markup-escape markup-subparser \
	mem-overflow mutex node once option-context option-argv0 \
	pattern private protocol queue rand rec-mutex regex rwlock \
	scannerapi sequence shell slice slist sort spawn-multithreaded \
	spawn-singlethread strfuncs string testing test-printf thread \
	timeout tree utf8-performance utf8-pointer utf8-validate \
	utf8-misc utils unicode uri 1bit-mutex 1bit-emufutex 642026 \
	642026-ec $(am__append_2) $(am__append_3)
AM_CPPFLAGS = \
	-g 				\
	$(glib_INCLUDES) 		\
	-DG_LOG_DOMAIN=\"GLib\" 	\
	-DSRCDIR=\""$(srcdir)"\"	\
	$(GLIB_DEBUG_FLAGS)

AM_CFLAGS = $(GLIB_WARN_CFLAGS)
LDADD = $(top_builddir)/glib/libglib-2.0.la -lm
atomic_CFLAGS = $(AM_CFLAGS) $(am__append_1)
642026_ec_SOURCES = 642026.c
642026_ec_CFLAGS = -DG_ERRORCHECK_MUTEXES
1bit_emufutex_SOURCES = 1bit-mutex.c
1bit_emufutex_CFLAGS = $(AM_CFLAGS) -DTEST_EMULATED_FUTEX
gwakeup_SOURCES = gwakeuptest.c ../../glib/gwakeup.c
gwakeup_fallback_SOURCES = gwakeuptest.c ../../glib/gwakeup.c
gwakeup_fallback_CFLAGS = $(AM_CFLAGS) -DTEST_EVENTFD_FALLBACK

# some testing of gtester functionality
XMLLINT = xmllint
private_LDFLAGS = -pthread
CLEANFILES = \
	tmpsample.xml

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu glib/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu glib/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.decl:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

1bit-emufutex$(EXEEXT): $(1bit_emufutex_OBJECTS) $(1bit_emufutex_DEPENDENCIES) $(EXTRA_1bit_emufutex_DEPENDENCIES) 
	@rm -f 1bit-emufutex$(EXEEXT)
	$(AM_V_CCLD)$(1bit_emufutex_LINK) $(1bit_emufutex_OBJECTS) $(1bit_emufutex_LDADD) $(LIBS)

1bit-mutex$(EXEEXT): $(1bit_mutex_OBJECTS) $(1bit_mutex_DEPENDENCIES) $(EXTRA_1bit_mutex_DEPENDENCIES) 
	@rm -f 1bit-mutex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(1bit_mutex_OBJECTS) $(1bit_mutex_LDADD) $(LIBS)

642026$(EXEEXT): $(642026_OBJECTS) $(642026_DEPENDENCIES) $(EXTRA_642026_DEPENDENCIES) 
	@rm -f 642026$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(642026_OBJECTS) $(642026_LDADD) $(LIBS)

642026-ec$(EXEEXT): $(642026_ec_OBJECTS) $(642026_ec_DEPENDENCIES) $(EXTRA_642026_ec_DEPENDENCIES) 
	@rm -f 642026-ec$(EXEEXT)
	$(AM_V_CCLD)$(642026_ec_LINK) $(642026_ec_OBJECTS) $(642026_ec_LDADD) $(LIBS)

array-test$(EXEEXT): $(array_test_OBJECTS) $(array_test_DEPENDENCIES) $(EXTRA_array_test_DEPENDENCIES) 
	@rm -f array-test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(array_test_OBJECTS) $(array_test_LDADD) $(LIBS)

asyncqueue$(EXEEXT): $(asyncqueue_OBJECTS) $(asyncqueue_DEPENDENCIES) $(EXTRA_asyncqueue_DEPENDENCIES) 
	@rm -f asyncqueue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(asyncqueue_OBJECTS) $(asyncqueue_LDADD) $(LIBS)

atomic$(EXEEXT): $(atomic_OBJECTS) $(atomic_DEPENDENCIES) $(EXTRA_atomic_DEPENDENCIES) 
	@rm -f atomic$(EXEEXT)
	$(AM_V_CCLD)$(atomic_LINK) $(atomic_OBJECTS) $(atomic_LDADD) $(LIBS)

base64$(EXEEXT): $(base64_OBJECTS) $(base64_DEPENDENCIES) $(EXTRA_base64_DEPENDENCIES) 
	@rm -f base64$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(base64_OBJECTS) $(base64_LDADD) $(LIBS)

bitlock$(EXEEXT): $(bitlock_OBJECTS) $(bitlock_DEPENDENCIES) $(EXTRA_bitlock_DEPENDENCIES) 
	@rm -f bitlock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bitlock_OBJECTS) $(bitlock_LDADD) $(LIBS)

bookmarkfile$(EXEEXT): $(bookmarkfile_OBJECTS) $(bookmarkfile_DEPENDENCIES) $(EXTRA_bookmarkfile_DEPENDENCIES) 
	@rm -f bookmarkfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bookmarkfile_OBJECTS) $(bookmarkfile_LDADD) $(LIBS)

bytes$(EXEEXT): $(bytes_OBJECTS) $(bytes_DEPENDENCIES) $(EXTRA_bytes_DEPENDENCIES) 
	@rm -f bytes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bytes_OBJECTS) $(bytes_LDADD) $(LIBS)

cache$(EXEEXT): $(cache_OBJECTS) $(cache_DEPENDENCIES) $(EXTRA_cache_DEPENDENCIES) 
	@rm -f cache$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cache_OBJECTS) $(cache_LDADD) $(LIBS)

checksum$(EXEEXT): $(checksum_OBJECTS) $(checksum_DEPENDENCIES) $(EXTRA_checksum_DEPENDENCIES) 
	@rm -f checksum$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(checksum_OBJECTS) $(checksum_LDADD) $(LIBS)

collate$(EXEEXT): $(collate_OBJECTS) $(collate_DEPENDENCIES) $(EXTRA_collate_DEPENDENCIES) 
	@rm -f collate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collate_OBJECTS) $(collate_LDADD) $(LIBS)

cond$(EXEEXT): $(cond_OBJECTS) $(cond_DEPENDENCIES) $(EXTRA_cond_DEPENDENCIES) 
	@rm -f cond$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_OBJECTS) $(cond_LDADD) $(LIBS)

convert$(EXEEXT): $(convert_OBJECTS) $(convert_DEPENDENCIES) $(EXTRA_convert_DEPENDENCIES) 
	@rm -f convert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(convert_OBJECTS) $(convert_LDADD) $(LIBS)

dataset$(EXEEXT): $(dataset_OBJECTS) $(dataset_DEPENDENCIES) $(EXTRA_dataset_DEPENDENCIES) 
	@rm -f dataset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dataset_OBJECTS) $(dataset_LDADD) $(LIBS)

date$(EXEEXT): $(date_OBJECTS) $(date_DEPENDENCIES) $(EXTRA_date_DEPENDENCIES) 
	@rm -f date$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(date_OBJECTS) $(date_LDADD) $(LIBS)

dir$(EXEEXT): $(dir_OBJECTS) $(dir_DEPENDENCIES) $(EXTRA_dir_DEPENDENCIES) 
	@rm -f dir$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dir_OBJECTS) $(dir_LDADD) $(LIBS)

environment$(EXEEXT): $(environment_OBJECTS) $(environment_DEPENDENCIES) $(EXTRA_environment_DEPENDENCIES) 
	@rm -f environment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(environment_OBJECTS) $(environment_LDADD) $(LIBS)

error$(EXEEXT): $(error_OBJECTS) $(error_DEPENDENCIES) $(EXTRA_error_DEPENDENCIES) 
	@rm -f error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(error_OBJECTS) $(error_LDADD) $(LIBS)

fileutils$(EXEEXT): $(fileutils_OBJECTS) $(fileutils_DEPENDENCIES) $(EXTRA_fileutils_DEPENDENCIES) 
	@rm -f fileutils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fileutils_OBJECTS) $(fileutils_LDADD) $(LIBS)

gdatetime$(EXEEXT): $(gdatetime_OBJECTS) $(gdatetime_DEPENDENCIES) $(EXTRA_gdatetime_DEPENDENCIES) 
	@rm -f gdatetime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gdatetime_OBJECTS) $(gdatetime_LDADD) $(LIBS)

gvariant$(EXEEXT): $(gvariant_OBJECTS) $(gvariant_DEPENDENCIES) $(EXTRA_gvariant_DEPENDENCIES) 
	@rm -f gvariant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gvariant_OBJECTS) $(gvariant_LDADD) $(LIBS)

gwakeup$(EXEEXT): $(gwakeup_OBJECTS) $(gwakeup_DEPENDENCIES) $(EXTRA_gwakeup_DEPENDENCIES) 
	@rm -f gwakeup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gwakeup_OBJECTS) $(gwakeup_LDADD) $(LIBS)

gwakeup-fallback$(EXEEXT): $(gwakeup_fallback_OBJECTS) $(gwakeup_fallback_DEPENDENCIES) $(EXTRA_gwakeup_fallback_DEPENDENCIES) 
	@rm -f gwakeup-fallback$(EXEEXT)
	$(AM_V_CCLD)$(gwakeup_fallback_LINK) $(gwakeup_fallback_OBJECTS) $(gwakeup_fallback_LDADD) $(LIBS)

hash$(EXEEXT): $(hash_OBJECTS) $(hash_DEPENDENCIES) $(EXTRA_hash_DEPENDENCIES) 
	@rm -f hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash_OBJECTS) $(hash_LDADD) $(LIBS)

hmac$(EXEEXT): $(hmac_OBJECTS) $(hmac_DEPENDENCIES) $(EXTRA_hmac_DEPENDENCIES) 
	@rm -f hmac$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hmac_OBJECTS) $(hmac_LDADD) $(LIBS)

hook$(EXEEXT): $(hook_OBJECTS) $(hook_DEPENDENCIES) $(EXTRA_hook_DEPENDENCIES) 
	@rm -f hook$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hook_OBJECTS) $(hook_LDADD) $(LIBS)

hostutils$(EXEEXT): $(hostutils_OBJECTS) $(hostutils_DEPENDENCIES) $(EXTRA_hostutils_DEPENDENCIES) 
	@rm -f hostutils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hostutils_OBJECTS) $(hostutils_LDADD) $(LIBS)

include$(EXEEXT): $(include_OBJECTS) $(include_DEPENDENCIES) $(EXTRA_include_DEPENDENCIES) 
	@rm -f include$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(include_OBJECTS) $(include_LDADD) $(LIBS)

keyfile$(EXEEXT): $(keyfile_OBJECTS) $(keyfile_DEPENDENCIES) $(EXTRA_keyfile_DEPENDENCIES) 
	@rm -f keyfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(keyfile_OBJECTS) $(keyfile_LDADD) $(LIBS)

list$(EXEEXT): $(list_OBJECTS) $(list_DEPENDENCIES) $(EXTRA_list_DEPENDENCIES) 
	@rm -f list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(list_OBJECTS) $(list_LDADD) $(LIBS)

logging$(EXEEXT): $(logging_OBJECTS) $(logging_DEPENDENCIES) $(EXTRA_logging_DEPENDENCIES) 
	@rm -f logging$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(logging_OBJECTS) $(logging_LDADD) $(LIBS)

mainloop$(EXEEXT): $(mainloop_OBJECTS) $(mainloop_DEPENDENCIES) $(EXTRA_mainloop_DEPENDENCIES) 
	@rm -f mainloop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mainloop_OBJECTS) $(mainloop_LDADD) $(LIBS)

mappedfile$(EXEEXT): $(mappedfile_OBJECTS) $(mappedfile_DEPENDENCIES) $(EXTRA_mappedfile_DEPENDENCIES) 
	@rm -f mappedfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mappedfile_OBJECTS) $(mappedfile_LDADD) $(LIBS)

markup-collect$(EXEEXT): $(markup_collect_OBJECTS) $(markup_collect_DEPENDENCIES) $(EXTRA_markup_collect_DEPENDENCIES) 
	@rm -f markup-collect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_collect_OBJECTS) $(markup_collect_LDADD) $(LIBS)

markup-escape$(EXEEXT): $(markup_escape_OBJECTS) $(markup_escape_DEPENDENCIES) $(EXTRA_markup_escape_DEPENDENCIES) 
	@rm -f markup-escape$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_escape_OBJECTS) $(markup_escape_LDADD) $(LIBS)

markup-parse$(EXEEXT): $(markup_parse_OBJECTS) $(markup_parse_DEPENDENCIES) $(EXTRA_markup_parse_DEPENDENCIES) 
	@rm -f markup-parse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_parse_OBJECTS) $(markup_parse_LDADD) $(LIBS)

markup-subparser$(EXEEXT): $(markup_subparser_OBJECTS) $(markup_subparser_DEPENDENCIES) $(EXTRA_markup_subparser_DEPENDENCIES) 
	@rm -f markup-subparser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(markup_subparser_OBJECTS) $(markup_subparser_LDADD) $(LIBS)

mem-overflow$(EXEEXT): $(mem_overflow_OBJECTS) $(mem_overflow_DEPENDENCIES) $(EXTRA_mem_overflow_DEPENDENCIES) 
	@rm -f mem-overflow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mem_overflow_OBJECTS) $(mem_overflow_LDADD) $(LIBS)

mutex$(EXEEXT): $(mutex_OBJECTS) $(mutex_DEPENDENCIES) $(EXTRA_mutex_DEPENDENCIES) 
	@rm -f mutex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_OBJECTS) $(mutex_LDADD) $(LIBS)

node$(EXEEXT): $(node_OBJECTS) $(node_DEPENDENCIES) $(EXTRA_node_DEPENDENCIES) 
	@rm -f node$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(node_OBJECTS) $(node_LDADD) $(LIBS)

once$(EXEEXT): $(once_OBJECTS) $(once_DEPENDENCIES) $(EXTRA_once_DEPENDENCIES) 
	@rm -f once$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(once_OBJECTS) $(once_LDADD) $(LIBS)

option-argv0$(EXEEXT): $(option_argv0_OBJECTS) $(option_argv0_DEPENDENCIES) $(EXTRA_option_argv0_DEPENDENCIES) 
	@rm -f option-argv0$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(option_argv0_OBJECTS) $(option_argv0_LDADD) $(LIBS)

option-context$(EXEEXT): $(option_context_OBJECTS) $(option_context_DEPENDENCIES) $(EXTRA_option_context_DEPENDENCIES) 
	@rm -f option-context$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(option_context_OBJECTS) $(option_context_LDADD) $(LIBS)

pattern$(EXEEXT): $(pattern_OBJECTS) $(pattern_DEPENDENCIES) $(EXTRA_pattern_DEPENDENCIES) 
	@rm -f pattern$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pattern_OBJECTS) $(pattern_LDADD) $(LIBS)

private$(EXEEXT): $(private_OBJECTS) $(private_DEPENDENCIES) $(EXTRA_private_DEPENDENCIES) 
	@rm -f private$(EXEEXT)
	$(AM_V_CCLD)$(private_LINK) $(private_OBJECTS) $(private_LDADD) $(LIBS)

protocol$(EXEEXT): $(protocol_OBJECTS) $(protocol_DEPENDENCIES) $(EXTRA_protocol_DEPENDENCIES) 
	@rm -f protocol$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(protocol_OBJECTS) $(protocol_LDADD) $(LIBS)

queue$(EXEEXT): $(queue_OBJECTS) $(queue_DEPENDENCIES) $(EXTRA_queue_DEPENDENCIES) 
	@rm -f queue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(queue_OBJECTS) $(queue_LDADD) $(LIBS)

rand$(EXEEXT): $(rand_OBJECTS) $(rand_DEPENDENCIES) $(EXTRA_rand_DEPENDENCIES) 
	@rm -f rand$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rand_OBJECTS) $(rand_LDADD) $(LIBS)

rec-mutex$(EXEEXT): $(rec_mutex_OBJECTS) $(rec_mutex_DEPENDENCIES) $(EXTRA_rec_mutex_DEPENDENCIES) 
	@rm -f rec-mutex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rec_mutex_OBJECTS) $(rec_mutex_LDADD) $(LIBS)

regex$(EXEEXT): $(regex_OBJECTS) $(regex_DEPENDENCIES) $(EXTRA_regex_DEPENDENCIES) 
	@rm -f regex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(regex_OBJECTS) $(regex_LDADD) $(LIBS)

rwlock$(EXEEXT): $(rwlock_OBJECTS) $(rwlock_DEPENDENCIES) $(EXTRA_rwlock_DEPENDENCIES) 
	@rm -f rwlock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rwlock_OBJECTS) $(rwlock_LDADD) $(LIBS)

scannerapi$(EXEEXT): $(scannerapi_OBJECTS) $(scannerapi_DEPENDENCIES) $(EXTRA_scannerapi_DEPENDENCIES) 
	@rm -f scannerapi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scannerapi_OBJECTS) $(scannerapi_LDADD) $(LIBS)

sequence$(EXEEXT): $(sequence_OBJECTS) $(sequence_DEPENDENCIES) $(EXTRA_sequence_DEPENDENCIES) 
	@rm -f sequence$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sequence_OBJECTS) $(sequence_LDADD) $(LIBS)

shell$(EXEEXT): $(shell_OBJECTS) $(shell_DEPENDENCIES) $(EXTRA_shell_DEPENDENCIES) 
	@rm -f shell$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shell_OBJECTS) $(shell_LDADD) $(LIBS)

slice$(EXEEXT): $(slice_OBJECTS) $(slice_DEPENDENCIES) $(EXTRA_slice_DEPENDENCIES) 
	@rm -f slice$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slice_OBJECTS) $(slice_LDADD) $(LIBS)

slist$(EXEEXT): $(slist_OBJECTS) $(slist_DEPENDENCIES) $(EXTRA_slist_DEPENDENCIES) 
	@rm -f slist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(slist_OBJECTS) $(slist_LDADD) $(LIBS)

sort$(EXEEXT): $(sort_OBJECTS) $(sort_DEPENDENCIES) $(EXTRA_sort_DEPENDENCIES) 
	@rm -f sort$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)

spawn-multithreaded$(EXEEXT): $(spawn_multithreaded_OBJECTS) $(spawn_multithreaded_DEPENDENCIES) $(EXTRA_spawn_multithreaded_DEPENDENCIES) 
	@rm -f spawn-multithreaded$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spawn_multithreaded_OBJECTS) $(spawn_multithreaded_LDADD) $(LIBS)

spawn-singlethread$(EXEEXT): $(spawn_singlethread_OBJECTS) $(spawn_singlethread_DEPENDENCIES) $(EXTRA_spawn_singlethread_DEPENDENCIES) 
	@rm -f spawn-singlethread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spawn_singlethread_OBJECTS) $(spawn_singlethread_LDADD) $(LIBS)

strfuncs$(EXEEXT): $(strfuncs_OBJECTS) $(strfuncs_DEPENDENCIES) $(EXTRA_strfuncs_DEPENDENCIES) 
	@rm -f strfuncs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strfuncs_OBJECTS) $(strfuncs_LDADD) $(LIBS)

string$(EXEEXT): $(string_OBJECTS) $(string_DEPENDENCIES) $(EXTRA_string_DEPENDENCIES) 
	@rm -f string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(string_OBJECTS) $(string_LDADD) $(LIBS)

test-printf$(EXEEXT): $(test_printf_OBJECTS) $(test_printf_DEPENDENCIES) $(EXTRA_test_printf_DEPENDENCIES) 
	@rm -f test-printf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_printf_OBJECTS) $(test_printf_LDADD) $(LIBS)

test-spawn-echo$(EXEEXT): $(test_spawn_echo_OBJECTS) $(test_spawn_echo_DEPENDENCIES) $(EXTRA_test_spawn_echo_DEPENDENCIES) 
	@rm -f test-spawn-echo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_spawn_echo_OBJECTS) $(test_spawn_echo_LDADD) $(LIBS)

testing$(EXEEXT): $(testing_OBJECTS) $(testing_DEPENDENCIES) $(EXTRA_testing_DEPENDENCIES) 
	@rm -f testing$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testing_OBJECTS) $(testing_LDADD) $(LIBS)

thread$(EXEEXT): $(thread_OBJECTS) $(thread_DEPENDENCIES) $(EXTRA_thread_DEPENDENCIES) 
	@rm -f thread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_OBJECTS) $(thread_LDADD) $(LIBS)

timeout$(EXEEXT): $(timeout_OBJECTS) $(timeout_DEPENDENCIES) $(EXTRA_timeout_DEPENDENCIES) 
	@rm -f timeout$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timeout_OBJECTS) $(timeout_LDADD) $(LIBS)

tree$(EXEEXT): $(tree_OBJECTS) $(tree_DEPENDENCIES) $(EXTRA_tree_DEPENDENCIES) 
	@rm -f tree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tree_OBJECTS) $(tree_LDADD) $(LIBS)

unicode$(EXEEXT): $(unicode_OBJECTS) $(unicode_DEPENDENCIES) $(EXTRA_unicode_DEPENDENCIES) 
	@rm -f unicode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unicode_OBJECTS) $(unicode_LDADD) $(LIBS)

unix$(EXEEXT): $(unix_OBJECTS) $(unix_DEPENDENCIES) $(EXTRA_unix_DEPENDENCIES) 
	@rm -f unix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unix_OBJECTS) $(unix_LDADD) $(LIBS)

uri$(EXEEXT): $(uri_OBJECTS) $(uri_DEPENDENCIES) $(EXTRA_uri_DEPENDENCIES) 
	@rm -f uri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(uri_OBJECTS) $(uri_LDADD) $(LIBS)

utf8-misc$(EXEEXT): $(utf8_misc_OBJECTS) $(utf8_misc_DEPENDENCIES) $(EXTRA_utf8_misc_DEPENDENCIES) 
	@rm -f utf8-misc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_misc_OBJECTS) $(utf8_misc_LDADD) $(LIBS)

utf8-performance$(EXEEXT): $(utf8_performance_OBJECTS) $(utf8_performance_DEPENDENCIES) $(EXTRA_utf8_performance_DEPENDENCIES) 
	@rm -f utf8-performance$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_performance_OBJECTS) $(utf8_performance_LDADD) $(LIBS)

utf8-pointer$(EXEEXT): $(utf8_pointer_OBJECTS) $(utf8_pointer_DEPENDENCIES) $(EXTRA_utf8_pointer_DEPENDENCIES) 
	@rm -f utf8-pointer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_pointer_OBJECTS) $(utf8_pointer_LDADD) $(LIBS)

utf8-validate$(EXEEXT): $(utf8_validate_OBJECTS) $(utf8_validate_DEPENDENCIES) $(EXTRA_utf8_validate_DEPENDENCIES) 
	@rm -f utf8-validate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8_validate_OBJECTS) $(utf8_validate_LDADD) $(LIBS)

utils$(EXEEXT): $(utils_OBJECTS) $(utils_DEPENDENCIES) $(EXTRA_utils_DEPENDENCIES) 
	@rm -f utils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utils_OBJECTS) $(utils_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/1bit-mutex.Po
#include ./$(DEPDIR)/1bit_emufutex-1bit-mutex.Po
#include ./$(DEPDIR)/642026.Po
#include ./$(DEPDIR)/642026_ec-642026.Po
#include ./$(DEPDIR)/array-test.Po
#include ./$(DEPDIR)/asyncqueue.Po
#include ./$(DEPDIR)/atomic-atomic.Po
#include ./$(DEPDIR)/base64.Po
#include ./$(DEPDIR)/bitlock.Po
#include ./$(DEPDIR)/bookmarkfile.Po
#include ./$(DEPDIR)/bytes.Po
#include ./$(DEPDIR)/cache.Po
#include ./$(DEPDIR)/checksum.Po
#include ./$(DEPDIR)/collate.Po
#include ./$(DEPDIR)/cond.Po
#include ./$(DEPDIR)/convert.Po
#include ./$(DEPDIR)/dataset.Po
#include ./$(DEPDIR)/date.Po
#include ./$(DEPDIR)/dir.Po
#include ./$(DEPDIR)/environment.Po
#include ./$(DEPDIR)/error.Po
#include ./$(DEPDIR)/fileutils.Po
#include ./$(DEPDIR)/gdatetime.Po
#include ./$(DEPDIR)/gvariant.Po
#include ./$(DEPDIR)/gwakeup.Po
#include ./$(DEPDIR)/gwakeup_fallback-gwakeup.Po
#include ./$(DEPDIR)/gwakeup_fallback-gwakeuptest.Po
#include ./$(DEPDIR)/gwakeuptest.Po
#include ./$(DEPDIR)/hash.Po
#include ./$(DEPDIR)/hmac.Po
#include ./$(DEPDIR)/hook.Po
#include ./$(DEPDIR)/hostutils.Po
#include ./$(DEPDIR)/include.Po
#include ./$(DEPDIR)/keyfile.Po
#include ./$(DEPDIR)/list.Po
#include ./$(DEPDIR)/logging.Po
#include ./$(DEPDIR)/mainloop.Po
#include ./$(DEPDIR)/mappedfile.Po
#include ./$(DEPDIR)/markup-collect.Po
#include ./$(DEPDIR)/markup-escape.Po
#include ./$(DEPDIR)/markup-parse.Po
#include ./$(DEPDIR)/markup-subparser.Po
#include ./$(DEPDIR)/mem-overflow.Po
#include ./$(DEPDIR)/mutex.Po
#include ./$(DEPDIR)/node.Po
#include ./$(DEPDIR)/once.Po
#include ./$(DEPDIR)/option-argv0.Po
#include ./$(DEPDIR)/option-context.Po
#include ./$(DEPDIR)/pattern.Po
#include ./$(DEPDIR)/private.Po
#include ./$(DEPDIR)/protocol.Po
#include ./$(DEPDIR)/queue.Po
#include ./$(DEPDIR)/rand.Po
#include ./$(DEPDIR)/rec-mutex.Po
#include ./$(DEPDIR)/regex.Po
#include ./$(DEPDIR)/rwlock.Po
#include ./$(DEPDIR)/scannerapi.Po
#include ./$(DEPDIR)/sequence.Po
#include ./$(DEPDIR)/shell.Po
#include ./$(DEPDIR)/slice.Po
#include ./$(DEPDIR)/slist.Po
#include ./$(DEPDIR)/sort.Po
#include ./$(DEPDIR)/spawn-multithreaded.Po
#include ./$(DEPDIR)/spawn-singlethread.Po
#include ./$(DEPDIR)/strfuncs.Po
#include ./$(DEPDIR)/string.Po
#include ./$(DEPDIR)/test-printf.Po
#include ./$(DEPDIR)/test-spawn-echo.Po
#include ./$(DEPDIR)/testing.Po
#include ./$(DEPDIR)/thread.Po
#include ./$(DEPDIR)/timeout.Po
#include ./$(DEPDIR)/tree.Po
#include ./$(DEPDIR)/unicode.Po
#include ./$(DEPDIR)/unix.Po
#include ./$(DEPDIR)/uri.Po
#include ./$(DEPDIR)/utf8-misc.Po
#include ./$(DEPDIR)/utf8-performance.Po
#include ./$(DEPDIR)/utf8-pointer.Po
#include ./$(DEPDIR)/utf8-validate.Po
#include ./$(DEPDIR)/utils.Po

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

1bit_emufutex-1bit-mutex.o: 1bit-mutex.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(1bit_emufutex_CFLAGS) $(CFLAGS) -MT 1bit_emufutex-1bit-mutex.o -MD -MP -MF $(DEPDIR)/1bit_emufutex-1bit-mutex.Tpo -c -o 1bit_emufutex-1bit-mutex.o `test -f '1bit-mutex.c' || echo '$(srcdir)/'`1bit-mutex.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/1bit_emufutex-1bit-mutex.Tpo $(DEPDIR)/1bit_emufutex-1bit-mutex.Po
#	$(AM_V_CC)source='1bit-mutex.c' object='1bit_emufutex-1bit-mutex.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(1bit_emufutex_CFLAGS) $(CFLAGS) -c -o 1bit_emufutex-1bit-mutex.o `test -f '1bit-mutex.c' || echo '$(srcdir)/'`1bit-mutex.c

1bit_emufutex-1bit-mutex.obj: 1bit-mutex.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(1bit_emufutex_CFLAGS) $(CFLAGS) -MT 1bit_emufutex-1bit-mutex.obj -MD -MP -MF $(DEPDIR)/1bit_emufutex-1bit-mutex.Tpo -c -o 1bit_emufutex-1bit-mutex.obj `if test -f '1bit-mutex.c'; then $(CYGPATH_W) '1bit-mutex.c'; else $(CYGPATH_W) '$(srcdir)/1bit-mutex.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/1bit_emufutex-1bit-mutex.Tpo $(DEPDIR)/1bit_emufutex-1bit-mutex.Po
#	$(AM_V_CC)source='1bit-mutex.c' object='1bit_emufutex-1bit-mutex.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(1bit_emufutex_CFLAGS) $(CFLAGS) -c -o 1bit_emufutex-1bit-mutex.obj `if test -f '1bit-mutex.c'; then $(CYGPATH_W) '1bit-mutex.c'; else $(CYGPATH_W) '$(srcdir)/1bit-mutex.c'; fi`

642026_ec-642026.o: 642026.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(642026_ec_CFLAGS) $(CFLAGS) -MT 642026_ec-642026.o -MD -MP -MF $(DEPDIR)/642026_ec-642026.Tpo -c -o 642026_ec-642026.o `test -f '642026.c' || echo '$(srcdir)/'`642026.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/642026_ec-642026.Tpo $(DEPDIR)/642026_ec-642026.Po
#	$(AM_V_CC)source='642026.c' object='642026_ec-642026.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(642026_ec_CFLAGS) $(CFLAGS) -c -o 642026_ec-642026.o `test -f '642026.c' || echo '$(srcdir)/'`642026.c

642026_ec-642026.obj: 642026.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(642026_ec_CFLAGS) $(CFLAGS) -MT 642026_ec-642026.obj -MD -MP -MF $(DEPDIR)/642026_ec-642026.Tpo -c -o 642026_ec-642026.obj `if test -f '642026.c'; then $(CYGPATH_W) '642026.c'; else $(CYGPATH_W) '$(srcdir)/642026.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/642026_ec-642026.Tpo $(DEPDIR)/642026_ec-642026.Po
#	$(AM_V_CC)source='642026.c' object='642026_ec-642026.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(642026_ec_CFLAGS) $(CFLAGS) -c -o 642026_ec-642026.obj `if test -f '642026.c'; then $(CYGPATH_W) '642026.c'; else $(CYGPATH_W) '$(srcdir)/642026.c'; fi`

atomic-atomic.o: atomic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -MT atomic-atomic.o -MD -MP -MF $(DEPDIR)/atomic-atomic.Tpo -c -o atomic-atomic.o `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/atomic-atomic.Tpo $(DEPDIR)/atomic-atomic.Po
#	$(AM_V_CC)source='atomic.c' object='atomic-atomic.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -c -o atomic-atomic.o `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c

atomic-atomic.obj: atomic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -MT atomic-atomic.obj -MD -MP -MF $(DEPDIR)/atomic-atomic.Tpo -c -o atomic-atomic.obj `if test -f 'atomic.c'; then $(CYGPATH_W) 'atomic.c'; else $(CYGPATH_W) '$(srcdir)/atomic.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/atomic-atomic.Tpo $(DEPDIR)/atomic-atomic.Po
#	$(AM_V_CC)source='atomic.c' object='atomic-atomic.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(atomic_CFLAGS) $(CFLAGS) -c -o atomic-atomic.obj `if test -f 'atomic.c'; then $(CYGPATH_W) 'atomic.c'; else $(CYGPATH_W) '$(srcdir)/atomic.c'; fi`

gwakeup.o: ../../glib/gwakeup.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gwakeup.o -MD -MP -MF $(DEPDIR)/gwakeup.Tpo -c -o gwakeup.o `test -f '../../glib/gwakeup.c' || echo '$(srcdir)/'`../../glib/gwakeup.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/gwakeup.Tpo $(DEPDIR)/gwakeup.Po
#	$(AM_V_CC)source='../../glib/gwakeup.c' object='gwakeup.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gwakeup.o `test -f '../../glib/gwakeup.c' || echo '$(srcdir)/'`../../glib/gwakeup.c

gwakeup.obj: ../../glib/gwakeup.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gwakeup.obj -MD -MP -MF $(DEPDIR)/gwakeup.Tpo -c -o gwakeup.obj `if test -f '../../glib/gwakeup.c'; then $(CYGPATH_W) '../../glib/gwakeup.c'; else $(CYGPATH_W) '$(srcdir)/../../glib/gwakeup.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/gwakeup.Tpo $(DEPDIR)/gwakeup.Po
#	$(AM_V_CC)source='../../glib/gwakeup.c' object='gwakeup.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gwakeup.obj `if test -f '../../glib/gwakeup.c'; then $(CYGPATH_W) '../../glib/gwakeup.c'; else $(CYGPATH_W) '$(srcdir)/../../glib/gwakeup.c'; fi`

gwakeup_fallback-gwakeuptest.o: gwakeuptest.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -MT gwakeup_fallback-gwakeuptest.o -MD -MP -MF $(DEPDIR)/gwakeup_fallback-gwakeuptest.Tpo -c -o gwakeup_fallback-gwakeuptest.o `test -f 'gwakeuptest.c' || echo '$(srcdir)/'`gwakeuptest.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/gwakeup_fallback-gwakeuptest.Tpo $(DEPDIR)/gwakeup_fallback-gwakeuptest.Po
#	$(AM_V_CC)source='gwakeuptest.c' object='gwakeup_fallback-gwakeuptest.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -c -o gwakeup_fallback-gwakeuptest.o `test -f 'gwakeuptest.c' || echo '$(srcdir)/'`gwakeuptest.c

gwakeup_fallback-gwakeuptest.obj: gwakeuptest.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -MT gwakeup_fallback-gwakeuptest.obj -MD -MP -MF $(DEPDIR)/gwakeup_fallback-gwakeuptest.Tpo -c -o gwakeup_fallback-gwakeuptest.obj `if test -f 'gwakeuptest.c'; then $(CYGPATH_W) 'gwakeuptest.c'; else $(CYGPATH_W) '$(srcdir)/gwakeuptest.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/gwakeup_fallback-gwakeuptest.Tpo $(DEPDIR)/gwakeup_fallback-gwakeuptest.Po
#	$(AM_V_CC)source='gwakeuptest.c' object='gwakeup_fallback-gwakeuptest.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -c -o gwakeup_fallback-gwakeuptest.obj `if test -f 'gwakeuptest.c'; then $(CYGPATH_W) 'gwakeuptest.c'; else $(CYGPATH_W) '$(srcdir)/gwakeuptest.c'; fi`

gwakeup_fallback-gwakeup.o: ../../glib/gwakeup.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -MT gwakeup_fallback-gwakeup.o -MD -MP -MF $(DEPDIR)/gwakeup_fallback-gwakeup.Tpo -c -o gwakeup_fallback-gwakeup.o `test -f '../../glib/gwakeup.c' || echo '$(srcdir)/'`../../glib/gwakeup.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/gwakeup_fallback-gwakeup.Tpo $(DEPDIR)/gwakeup_fallback-gwakeup.Po
#	$(AM_V_CC)source='../../glib/gwakeup.c' object='gwakeup_fallback-gwakeup.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -c -o gwakeup_fallback-gwakeup.o `test -f '../../glib/gwakeup.c' || echo '$(srcdir)/'`../../glib/gwakeup.c

gwakeup_fallback-gwakeup.obj: ../../glib/gwakeup.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -MT gwakeup_fallback-gwakeup.obj -MD -MP -MF $(DEPDIR)/gwakeup_fallback-gwakeup.Tpo -c -o gwakeup_fallback-gwakeup.obj `if test -f '../../glib/gwakeup.c'; then $(CYGPATH_W) '../../glib/gwakeup.c'; else $(CYGPATH_W) '$(srcdir)/../../glib/gwakeup.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/gwakeup_fallback-gwakeup.Tpo $(DEPDIR)/gwakeup_fallback-gwakeup.Po
#	$(AM_V_CC)source='../../glib/gwakeup.c' object='gwakeup_fallback-gwakeup.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gwakeup_fallback_CFLAGS) $(CFLAGS) -c -o gwakeup_fallback-gwakeup.obj `if test -f '../../glib/gwakeup.c'; then $(CYGPATH_W) '../../glib/gwakeup.c'; else $(CYGPATH_W) '$(srcdir)/../../glib/gwakeup.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


### testing rules

# test: run all tests in cwd and subdirs
test: test-nonrecursive
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done

# test-nonrecursive: run tests only in cwd
test-nonrecursive: ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || G_DEBUG=gc-friendly MALLOC_CHECK_=2 MALLOC_PERTURB_=$$(($${RANDOM:-256} % 256)) ${GTESTER} --verbose ${TEST_PROGS}
#test-nonrecursive:

# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  if test -d "$(top_srcdir)/.git" ; then \
	    REVISION=`git describe` ; \
	  else \
	    REVISION=$(VERSION) ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>'              > $@.xml ; \
	    echo '<report-collection>'               >> $@.xml ; \
	    echo '<info>'                            >> $@.xml ; \
	    echo '  <package>$(PACKAGE)</package>'   >> $@.xml ; \
	    echo '  <version>$(VERSION)</version>'   >> $@.xml ; \
	    echo "  <revision>$$REVISION</revision>" >> $@.xml ; \
	    echo '</info>'                           >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report test-nonrecursive

.PHONY: lcov genlcov lcov-clean
# use recursive makes in order to ignore errors during check
lcov:
	-$(MAKE) $(AM_MAKEFLAGS) -k check
	$(MAKE) $(AM_MAKEFLAGS) genlcov

# we have to massage the lcov.info file slightly to hide the effect of libtool
# placing the objects files in the .libs/ directory separate from the *.c
# we also have to delete tests/.libs/libmoduletestplugin_*.gcda
genlcov:
	rm -f $(top_builddir)/tests/.libs/libmoduletestplugin_*.gcda
	$(LTP) --directory $(top_builddir) --capture --output-file glib-lcov.info --test-name GLIB_PERF --no-checksum --compat-libtool
	LANG=C $(LTP_GENHTML) --prefix $(top_builddir) --output-directory glib-lcov --title "GLib Code Coverage" --legend --show-details glib-lcov.info
	@echo "file://$(abs_top_builddir)/glib-lcov/index.html"

lcov-clean:
	-$(LTP) --directory $(top_builddir) -z
	-rm -rf glib-lcov.info glib-lcov
	-find -name '*.gcda' -print | xargs rm

# run tests in cwd as part of make check
check-local: test-nonrecursive

gtester-xmllint-check: # check testreport xml with xmllint if present
	${GTESTER} -k --quiet -o tmpsample.xml --test-arg=--gtester-selftest ${GTESTER}
	${XMLLINT} --version 2>/dev/null; test "$$?" != 0 || ${XMLLINT} --noout tmpsample.xml

check-am: gtester-xmllint-check

dist-hook:
	mkdir $(distdir)/markups;		\
	for f in $(srcdir)/markups/*; do 	\
	  cp $$f $(distdir)/markups; done
	mkdir $(distdir)/bookmarks;		\
	for f in $(srcdir)/bookmarks/* ; do 	\
	  cp $$f $(distdir)/bookmarks; done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
