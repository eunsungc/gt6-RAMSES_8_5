#!/bin/sh
set -e # exit on any error
LOGNAME=$USER
export LOGNAME
VOMS_LOCATION="$_CONDOR_SCRATCH_DIR/voms"
MYPROXY_CONFIG_OPTS=""
(
if test ! -f /usr/lib/libssl.so -a -f /usr/sfw/lib/libssl.so; then
    PKG_CONFIG_PATH="/usr/sfw/lib/pkgconfig"
    OPENSSL_CFLAGS="-I/usr/sfw/include"
    OPENSSL_INCLUDES="-I/usr/sfw/include"
    OPENSSL_LDFLAGS="-L/usr/sfw/lib"
    OPENSSL_LIBS="-lssl -lcrypto"
    export PKG_CONFIG_PATH
    export OPENSSL_CFLAGS OPENSSL_INCLUDES OPENSSL_LDFLAGS OPENSSL_LIBS
    PATH=/usr/sfw/bin:$PATH
    export PATH
fi
# for Solaris
if test -d /usr/gnu/bin; then
    PATH=/usr/gnu/bin:$PATH
    export PATH
fi
# for Solaris
if test -d /usr/perl5/bin; then
    PATH=/usr/perl5/bin:$PATH
    export PATH
fi
if test -n "${LD_LIBRARY_PATH}" -a -z "${LIBPATH}"; then
    LIBPATH=$LD_LIBRARY_PATH
    export LIBPATH
fi
valgrind=""
valgrind_path=`which valgrind 2>/dev/null || true`
if test -x "$valgrind_path"; then
    echo valgrind found at $valgrind_path
    valgrind="-valgrind"
fi    
voms=""
if test -r "${VOMS_LOCATION}/lib/libvomsc.so"; then
    voms="--with-voms=${VOMS_LOCATION}"
fi
if test -n "${JAVA_HOME}"; then
    jglobus="cog-jglobus-1.8.0"
    COG_INSTALL_PATH=`pwd`/$jglobus
    export COG_INSTALL_PATH
    if test ! -d $COG_INSTALL_PATH; then
	tar xfz $jglobus-bin.tar.gz
    fi
fi
BuildGT()
{
    echo ==================================================
    echo Environment variables:
    env
    export GLOBUS_LOCATION
    echo ==================================================
    echo Disk space:
    df . $_CONDOR_SCRATCH_DIR
    echo ==================================================
    echo Installing $installer to $GLOBUS_LOCATION
    tar xfz $installer
    mv gt*-installer $installerdir
    cd $installerdir
    ./configure --prefix=$GLOBUS_LOCATION --with-buildopts="-verbose"
    make globus_usage gsi-myproxy install
    cd ..
    rm -rf $installerdir # limit scratch space use
}
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGT52"; then
    installer="gt5.2.5-all-source-installer.tar.gz"
    GLOBUS_LOCATION="$_CONDOR_SCRATCH_DIR/gt52"
    installerdir="gt52-src"
    BuildGT
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGTNightly"; then
    installer="nightly.tar.gz"
    GLOBUS_LOCATION="$_CONDOR_SCRATCH_DIR/gt-nightly"
    installerdir="gt-nightly-src"
    BuildGT
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildVOMS"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt52
    export GLOBUS_LOCATION
    . $GLOBUS_LOCATION/etc/globus-user-env.sh
    echo ==================================================
    echo Building VOMS to $VOMS_LOCATION
    cd org.glite.security.voms
    ./configure --prefix=$VOMS_LOCATION \
      --disable-java --disable-docs --with-api-only
    make
    make install
    cd ..
fi
BuildMyProxyCVS()
{
    export GLOBUS_LOCATION
    echo ==================================================
    echo Installing MyProxy CVS to $GLOBUS_LOCATION
    . $GLOBUS_LOCATION/etc/globus-user-env.sh
    echo ==================================================
    echo Environment variables:
    env
    echo ==================================================
    flavor=`gpt-query -name=myproxy | perl -n -e 'if (/myproxy-(.*)-pgm/){print "$1\n";}'|head -1`
    echo GPT flavor is $flavor.
    echo ==================================================
    echo Building MyProxy...
    cp -r myproxy myproxy.build
    cd myproxy.build
    ./bootstrap
    ./configure --with-flavor=$flavor --prefix=$GLOBUS_LOCATION $MYPROXY_CONFIG_OPTS
    make dist
    gpt-uninstall myproxy
    rm -rf BUILD
    if test -n "${MYPROXY_CONFIG_OPTS}"; then
	make install
    else
	gpt-build -verbose myproxy-*.tar.gz $flavor
    fi
    cd ..
    rm -rf myproxy.build
}
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildMyProxyCVSGT50"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt50
    unset MYPROXY_CONFIG_OPTS
    BuildMyProxyCVS
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildMyProxyCVSGT52"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt52
    MYPROXY_CONFIG_OPTS=$voms
    BuildMyProxyCVS
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildMyProxyCVSGTNightly"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt-nightly
    unset MYPROXY_CONFIG_OPTS
    BuildMyProxyCVS
fi
TestMyProxyCVS()
{
    . $GLOBUS_LOCATION/etc/globus-user-env.sh
    export GLOBUS_LOCATION
    echo ==================================================
    echo Testing MyProxy in $GLOBUS_LOCATION
    cd myproxy
    myproxy-test -startserver -generatecerts $valgrindopt
    myproxy-test-replicate
    cd ..
}
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xTestMyProxyCVSGT50"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt50
    valgrindopt=$valgrind
    TestMyProxyCVS
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xTestMyProxyCVSGT52"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt52
    valgrindopt=""
    TestMyProxyCVS
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xTestMyProxyCVSGTNightly"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt-nightly
    valgrindopt=$valgrind
    TestMyProxyCVS
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xValgrindCheck"; then
    if test -n "$valgrind"; then
        cat myproxy/valgrind.log.* 1> valgrind.log 2>/dev/null || true
        if test -s valgrind.log ; then
            echo valgrind errors:
            cat valgrind.log
            exit 1
        else
            echo No valgrind errors found.
        fi
    else
        echo valgrind was not used.
    fi
fi
) 2>&1 # we want stdout & stderr mixed in the output file
